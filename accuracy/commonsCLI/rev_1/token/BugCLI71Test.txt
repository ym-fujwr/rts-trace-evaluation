package
org
.
apache
.
commons
.
cli
.
bug
;
import
static
org
.
junit
.
Assert
.
assertEquals
;
import
static
org
.
junit
.
Assert
.
fail
;
import
org
.
apache
.
commons
.
cli
.
CommandLine
;
import
org
.
apache
.
commons
.
cli
.
CommandLineParser
;
import
org
.
apache
.
commons
.
cli
.
MissingArgumentException
;
import
org
.
apache
.
commons
.
cli
.
Option
;
import
org
.
apache
.
commons
.
cli
.
Options
;
import
org
.
apache
.
commons
.
cli
.
PosixParser
;
import
org
.
junit
.
Before
;
import
org
.
junit
.
Test
;
@
SuppressWarnings
(
"deprecation"
)
public
class
BugCLI71Test
{
private
Options
options
;
private
CommandLineParser
parser
;
@
Before
public
void
setUp
(
)
{
options
=
new
Options
(
)
;
final
Option
algorithm
=
new
Option
(
"a"
,
"algo"
,
true
,
"the algorithm which it to perform executing"
)
;
algorithm
.
setArgName
(
"algorithm name"
)
;
options
.
addOption
(
algorithm
)
;
final
Option
key
=
new
Option
(
"k"
,
"key"
,
true
,
"the key the setted algorithm uses to process"
)
;
algorithm
.
setArgName
(
"value"
)
;
options
.
addOption
(
key
)
;
parser
=
new
PosixParser
(
)
;
}
@
Test
public
void
testBasic
(
)
throws
Exception
{
final
String
[
]
args
=
{
"-a"
,
"Caesar"
,
"-k"
,
"A"
}
;
final
CommandLine
line
=
parser
.
parse
(
options
,
args
)
;
assertEquals
(
"Caesar"
,
line
.
getOptionValue
(
"a"
)
)
;
assertEquals
(
"A"
,
line
.
getOptionValue
(
"k"
)
)
;
}
@
Test
public
void
testGetsDefaultIfOptional
(
)
throws
Exception
{
final
String
[
]
args
=
{
"-k"
,
"-a"
,
"Caesar"
}
;
options
.
getOption
(
"k"
)
.
setOptionalArg
(
true
)
;
final
CommandLine
line
=
parser
.
parse
(
options
,
args
)
;
assertEquals
(
"Caesar"
,
line
.
getOptionValue
(
"a"
)
)
;
assertEquals
(
"a"
,
line
.
getOptionValue
(
'k'
,
"a"
)
)
;
}
@
Test
public
void
testLackOfError
(
)
throws
Exception
{
final
String
[
]
args
=
{
"-k"
,
"-a"
,
"Caesar"
}
;
try
{
parser
.
parse
(
options
,
args
)
;
fail
(
"MissingArgumentException expected"
)
;
}
catch
(
final
MissingArgumentException
e
)
{
assertEquals
(
"option missing an argument"
,
"k"
,
e
.
getOption
(
)
.
getOpt
(
)
)
;
}
}
@
Test
public
void
testMistakenArgument
(
)
throws
Exception
{
String
[
]
args
=
{
"-a"
,
"Caesar"
,
"-k"
,
"A"
}
;
CommandLine
line
=
parser
.
parse
(
options
,
args
)
;
args
=
new
String
[
]
{
"-a"
,
"Caesar"
,
"-k"
,
"a"
}
;
line
=
parser
.
parse
(
options
,
args
)
;
assertEquals
(
"Caesar"
,
line
.
getOptionValue
(
"a"
)
)
;
assertEquals
(
"a"
,
line
.
getOptionValue
(
"k"
)
)
;
}
}
<EOF>
