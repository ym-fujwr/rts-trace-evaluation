package
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
dom
;
import
java
.
util
.
ArrayList
;
import
java
.
util
.
List
;
import
java
.
util
.
Objects
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
QName
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
NodeIterator
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
NodePointer
;
import
org
.
w3c
.
dom
.
Attr
;
import
org
.
w3c
.
dom
.
Element
;
import
org
.
w3c
.
dom
.
NamedNodeMap
;
import
org
.
w3c
.
dom
.
Node
;
public
class
DOMAttributeIterator
implements
NodeIterator
{
private
NodePointer
parent
;
private
QName
name
;
private
List
attributes
;
private
int
position
=
0
;
public
DOMAttributeIterator
(
NodePointer
parent
,
QName
name
)
{
this
.
parent
=
parent
;
this
.
name
=
name
;
attributes
=
new
ArrayList
(
)
;
Node
node
=
(
Node
)
parent
.
getNode
(
)
;
if
(
node
.
getNodeType
(
)
==
Node
.
ELEMENT_NODE
)
{
String
lname
=
name
.
getName
(
)
;
if
(
!
lname
.
equals
(
"*"
)
)
{
Attr
attr
=
getAttribute
(
(
Element
)
node
,
name
)
;
if
(
attr
!=
null
)
{
attributes
.
add
(
attr
)
;
}
}
else
{
NamedNodeMap
map
=
node
.
getAttributes
(
)
;
int
count
=
map
.
getLength
(
)
;
for
(
int
i
=
0
;
i
<
count
;
i
++
)
{
Attr
attr
=
(
Attr
)
map
.
item
(
i
)
;
if
(
testAttr
(
attr
)
)
{
attributes
.
add
(
attr
)
;
}
}
}
}
}
private
boolean
testAttr
(
Attr
attr
)
{
String
nodePrefix
=
DOMNodePointer
.
getPrefix
(
attr
)
;
String
nodeLocalName
=
DOMNodePointer
.
getLocalName
(
attr
)
;
if
(
nodePrefix
!=
null
&&
nodePrefix
.
equals
(
"xmlns"
)
)
{
return
false
;
}
if
(
nodePrefix
==
null
&&
nodeLocalName
.
equals
(
"xmlns"
)
)
{
return
false
;
}
String
testLocalName
=
name
.
getName
(
)
;
if
(
testLocalName
.
equals
(
"*"
)
||
testLocalName
.
equals
(
nodeLocalName
)
)
{
String
testPrefix
=
name
.
getPrefix
(
)
;
if
(
testPrefix
==
null
||
Objects
.
equals
(
testPrefix
,
nodePrefix
)
)
{
return
true
;
}
if
(
nodePrefix
==
null
)
{
return
false
;
}
return
Objects
.
equals
(
parent
.
getNamespaceURI
(
testPrefix
)
,
parent
.
getNamespaceURI
(
nodePrefix
)
)
;
}
return
false
;
}
private
Attr
getAttribute
(
Element
element
,
QName
name
)
{
String
testPrefix
=
name
.
getPrefix
(
)
;
String
testNS
=
null
;
if
(
testPrefix
!=
null
)
{
testNS
=
parent
.
getNamespaceResolver
(
)
.
getNamespaceURI
(
testPrefix
)
;
}
if
(
testNS
!=
null
)
{
Attr
attr
=
element
.
getAttributeNodeNS
(
testNS
,
name
.
getName
(
)
)
;
if
(
attr
!=
null
)
{
return
attr
;
}
NamedNodeMap
nnm
=
element
.
getAttributes
(
)
;
for
(
int
i
=
0
;
i
<
nnm
.
getLength
(
)
;
i
++
)
{
attr
=
(
Attr
)
nnm
.
item
(
i
)
;
if
(
testAttr
(
attr
)
)
{
return
attr
;
}
}
return
null
;
}
return
element
.
getAttributeNode
(
name
.
getName
(
)
)
;
}
public
NodePointer
getNodePointer
(
)
{
if
(
position
==
0
)
{
if
(
!
setPosition
(
1
)
)
{
return
null
;
}
position
=
0
;
}
int
index
=
position
-
1
;
if
(
index
<
0
)
{
index
=
0
;
}
return
new
DOMAttributePointer
(
parent
,
(
Attr
)
attributes
.
get
(
index
)
)
;
}
public
int
getPosition
(
)
{
return
position
;
}
public
boolean
setPosition
(
int
position
)
{
this
.
position
=
position
;
return
position
>=
1
&&
position
<=
attributes
.
size
(
)
;
}
}
<EOF>
