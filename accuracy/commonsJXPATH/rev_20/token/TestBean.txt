package
org
.
apache
.
commons
.
jxpath
;
import
java
.
util
.
ArrayList
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
HashSet
;
import
java
.
util
.
List
;
import
java
.
util
.
Map
;
import
java
.
util
.
Set
;
import
org
.
apache
.
commons
.
jxpath
.
util
.
ValueUtils
;
public
class
TestBean
{
private
NestedTestBean
[
]
beans
;
{
beans
=
new
NestedTestBean
[
2
]
;
beans
[
0
]
=
new
NestedTestBean
(
"Name 1"
)
;
beans
[
1
]
=
new
NestedTestBean
(
"Name 2"
)
;
beans
[
1
]
.
setInt
(
3
)
;
}
public
NestedTestBean
[
]
getBeans
(
)
{
return
beans
;
}
public
void
setBeans
(
NestedTestBean
[
]
beans
)
{
this
.
beans
=
beans
;
}
private
boolean
bool
=
false
;
public
boolean
isBoolean
(
)
{
return
bool
;
}
public
void
setBoolean
(
boolean
bool
)
{
this
.
bool
=
bool
;
}
private
int
integer
=
1
;
public
int
getInt
(
)
{
return
integer
;
}
public
void
setInt
(
int
integer
)
{
this
.
integer
=
integer
;
}
private
int
[
]
array
=
{
1
,
2
,
3
,
4
}
;
public
int
[
]
getIntegers
(
)
{
return
array
;
}
public
int
getIntegers
(
int
index
)
{
return
array
[
index
]
;
}
public
void
setIntegers
(
int
index
,
int
value
)
{
if
(
index
>=
array
.
length
)
{
array
=
(
int
[
]
)
ValueUtils
.
expandCollection
(
array
,
index
+
1
)
;
}
array
[
index
]
=
value
;
}
private
ArrayList
list
;
public
List
getList
(
)
{
if
(
list
==
null
)
{
list
=
new
ArrayList
(
)
;
list
.
add
(
"String 3"
)
;
list
.
add
(
new
Integer
(
3
)
)
;
list
.
add
(
new
NestedTestBean
(
"Name 3"
)
)
;
}
return
list
;
}
private
HashMap
map
;
{
map
=
new
HashMap
(
)
;
map
.
put
(
"Key1"
,
"Value 1"
)
;
map
.
put
(
"Key2"
,
new
NestedTestBean
(
"Name 6"
)
)
;
}
public
Map
getMap
(
)
{
return
map
;
}
public
void
setMap
(
Map
map
)
{
this
.
map
=
(
HashMap
)
map
;
}
private
NestedTestBean
nestedBean
=
new
NestedTestBean
(
"Name 0"
)
;
public
NestedTestBean
getNestedBean
(
)
{
return
nestedBean
;
}
public
void
setNestedBean
(
NestedTestBean
bean
)
{
this
.
nestedBean
=
bean
;
}
private
NestedTestBean
object
=
new
NestedTestBean
(
"Name 5"
)
;
public
Object
getObject
(
)
{
return
object
;
}
public
Object
getObjects
(
)
{
return
getIntegers
(
)
;
}
private
HashSet
set
;
public
Set
getSet
(
)
{
if
(
set
==
null
)
{
set
=
new
HashSet
(
)
;
set
.
add
(
"String 4"
)
;
set
.
add
(
new
Integer
(
4
)
)
;
set
.
add
(
new
NestedTestBean
(
"Name 4"
)
)
;
}
return
set
;
}
public
String
toString
(
)
{
return
"ROOT"
;
}
}
<EOF>
