package
org
.
apache
.
commons
.
jxpath
.
ri
.
model
;
import
org
.
apache
.
commons
.
jxpath
.
JXPathContext
;
import
org
.
apache
.
commons
.
jxpath
.
JXPathTestCase
;
import
org
.
apache
.
commons
.
jxpath
.
xml
.
DocumentContainer
;
public
class
ExternalXMLNamespaceTest
extends
JXPathTestCase
{
protected
JXPathContext
context
;
protected
DocumentContainer
createDocumentContainer
(
final
String
model
)
{
final
DocumentContainer
result
=
new
DocumentContainer
(
JXPathTestCase
.
class
.
getResource
(
"ExternalNS.xml"
)
,
model
)
;
result
.
setNamespaceAware
(
false
)
;
return
result
;
}
protected
JXPathContext
createContext
(
final
String
model
)
{
final
JXPathContext
context
=
JXPathContext
.
newContext
(
createDocumentContainer
(
model
)
)
;
context
.
registerNamespace
(
"A"
,
"foo"
)
;
context
.
registerNamespace
(
"B"
,
"bar"
)
;
return
context
;
}
protected
void
doTest
(
final
String
xpath
,
final
String
model
,
final
String
expected
)
{
assertXPathValue
(
createContext
(
model
)
,
xpath
,
expected
)
;
}
protected
void
doTestAttribute
(
final
String
model
)
{
doTest
(
"/ElementA/@A:myAttr"
,
model
,
"Mytype"
)
;
}
protected
void
doTestElement
(
final
String
model
)
{
doTest
(
"/ElementA/B:ElementB"
,
model
,
"MY VALUE"
)
;
}
protected
void
doTestCreateAndSetAttribute
(
final
String
model
)
{
assertXPathCreatePathAndSetValue
(
createContext
(
model
)
,
"/ElementA/@A:newAttr"
,
"newValue"
,
"/ElementA[1]/@A:newAttr"
)
;
}
public
void
testAttributeDOM
(
)
{
doTestAttribute
(
DocumentContainer
.
MODEL_DOM
)
;
}
public
void
testElementDOM
(
)
{
doTestElement
(
DocumentContainer
.
MODEL_DOM
)
;
}
public
void
testCreateAndSetAttributeDOM
(
)
{
doTestCreateAndSetAttribute
(
DocumentContainer
.
MODEL_DOM
)
;
}
}
<EOF>
