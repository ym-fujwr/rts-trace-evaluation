package
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
dynamic
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
Map
;
import
java
.
util
.
Vector
;
import
org
.
apache
.
commons
.
jxpath
.
AbstractFactory
;
import
org
.
apache
.
commons
.
jxpath
.
JXPathContext
;
import
org
.
apache
.
commons
.
jxpath
.
NestedTestBean
;
import
org
.
apache
.
commons
.
jxpath
.
Pointer
;
import
org
.
apache
.
commons
.
jxpath
.
TestBean
;
public
class
TestDynamicPropertyFactory
extends
AbstractFactory
{
@
Override
public
boolean
createObject
(
final
JXPathContext
context
,
final
Pointer
pointer
,
final
Object
parent
,
final
String
name
,
final
int
index
)
{
if
(
name
.
equals
(
"map"
)
)
{
(
(
TestBean
)
parent
)
.
setMap
(
new
HashMap
(
)
)
;
return
true
;
}
else
if
(
name
.
equals
(
"TestKey1"
)
)
{
(
(
Map
)
parent
)
.
put
(
name
,
""
)
;
return
true
;
}
else
if
(
name
.
equals
(
"TestKey2"
)
)
{
(
(
Map
)
parent
)
.
put
(
name
,
new
NestedTestBean
(
"newName"
)
)
;
return
true
;
}
else
if
(
name
.
equals
(
"TestKey3"
)
)
{
final
Vector
v
=
new
Vector
(
)
;
for
(
int
i
=
0
;
i
<=
index
;
i
++
)
{
v
.
add
(
null
)
;
}
(
(
Map
)
parent
)
.
put
(
name
,
v
)
;
return
true
;
}
else
if
(
name
.
equals
(
"TestKey4"
)
)
{
(
(
Map
)
parent
)
.
put
(
name
,
new
Object
[
]
{
new
TestBean
(
)
}
)
;
return
true
;
}
return
false
;
}
@
Override
public
boolean
declareVariable
(
final
JXPathContext
context
,
final
String
name
)
{
return
false
;
}
}
<EOF>
