package
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
beans
;
import
java
.
util
.
Locale
;
import
org
.
apache
.
commons
.
jxpath
.
JXPathContext
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
QName
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
NodePointer
;
public
class
NullPointer
extends
PropertyOwnerPointer
{
private
QName
name
;
private
String
id
;
private
static
final
long
serialVersionUID
=
2193425983220679887L
;
public
NullPointer
(
final
QName
name
,
final
Locale
locale
)
{
super
(
null
,
locale
)
;
this
.
name
=
name
;
}
public
NullPointer
(
final
NodePointer
parent
,
final
QName
name
)
{
super
(
parent
)
;
this
.
name
=
name
;
}
public
NullPointer
(
final
Locale
locale
,
final
String
id
)
{
super
(
null
,
locale
)
;
this
.
id
=
id
;
}
@
Override
public
QName
getName
(
)
{
return
name
;
}
@
Override
public
Object
getBaseValue
(
)
{
return
null
;
}
@
Override
public
boolean
isCollection
(
)
{
return
false
;
}
@
Override
public
boolean
isLeaf
(
)
{
return
true
;
}
@
Override
public
boolean
isActual
(
)
{
return
false
;
}
@
Override
public
PropertyPointer
getPropertyPointer
(
)
{
return
new
NullPropertyPointer
(
this
)
;
}
@
Override
public
NodePointer
createPath
(
final
JXPathContext
context
,
final
Object
value
)
{
if
(
parent
!=
null
)
{
return
parent
.
createPath
(
context
,
value
)
.
getValuePointer
(
)
;
}
throw
new
UnsupportedOperationException
(
"Cannot create the root object: "
+
asPath
(
)
)
;
}
@
Override
public
NodePointer
createPath
(
final
JXPathContext
context
)
{
if
(
parent
!=
null
)
{
return
parent
.
createPath
(
context
)
.
getValuePointer
(
)
;
}
throw
new
UnsupportedOperationException
(
"Cannot create the root object: "
+
asPath
(
)
)
;
}
@
Override
public
NodePointer
createChild
(
final
JXPathContext
context
,
final
QName
name
,
final
int
index
)
{
return
createPath
(
context
)
.
createChild
(
context
,
name
,
index
)
;
}
@
Override
public
NodePointer
createChild
(
final
JXPathContext
context
,
final
QName
name
,
final
int
index
,
final
Object
value
)
{
return
createPath
(
context
)
.
createChild
(
context
,
name
,
index
,
value
)
;
}
@
Override
public
int
hashCode
(
)
{
return
name
==
null
?
0
:
name
.
hashCode
(
)
;
}
@
Override
public
boolean
equals
(
final
Object
object
)
{
if
(
object
==
this
)
{
return
true
;
}
if
(
!
(
object
instanceof
NullPointer
)
)
{
return
false
;
}
final
NullPointer
other
=
(
NullPointer
)
object
;
return
name
==
other
.
name
||
name
!=
null
&&
name
.
equals
(
other
.
name
)
;
}
@
Override
public
String
asPath
(
)
{
if
(
id
!=
null
)
{
return
"id("
+
id
+
")"
;
}
return
parent
==
null
?
"null()"
:
super
.
asPath
(
)
;
}
@
Override
public
int
getLength
(
)
{
return
0
;
}
}
<EOF>
