package
org
.
apache
.
commons
.
net
.
telnet
;
public
class
TerminalTypeOptionHandler
extends
TelnetOptionHandler
{
protected
static
final
int
TERMINAL_TYPE
=
24
;
protected
static
final
int
TERMINAL_TYPE_SEND
=
1
;
protected
static
final
int
TERMINAL_TYPE_IS
=
0
;
private
final
String
termType
;
public
TerminalTypeOptionHandler
(
final
String
termtype
)
{
super
(
TelnetOption
.
TERMINAL_TYPE
,
false
,
false
,
false
,
false
)
;
termType
=
termtype
;
}
public
TerminalTypeOptionHandler
(
final
String
termtype
,
final
boolean
initlocal
,
final
boolean
initremote
,
final
boolean
acceptlocal
,
final
boolean
acceptremote
)
{
super
(
TelnetOption
.
TERMINAL_TYPE
,
initlocal
,
initremote
,
acceptlocal
,
acceptremote
)
;
termType
=
termtype
;
}
@
Override
public
int
[
]
answerSubnegotiation
(
final
int
suboptionData
[
]
,
final
int
suboptionLength
)
{
if
(
(
suboptionData
!=
null
)
&&
(
suboptionLength
>
1
)
&&
(
termType
!=
null
)
)
{
if
(
(
suboptionData
[
0
]
==
TERMINAL_TYPE
)
&&
(
suboptionData
[
1
]
==
TERMINAL_TYPE_SEND
)
)
{
final
int
response
[
]
=
new
int
[
termType
.
length
(
)
+
2
]
;
response
[
0
]
=
TERMINAL_TYPE
;
response
[
1
]
=
TERMINAL_TYPE_IS
;
for
(
int
ii
=
0
;
ii
<
termType
.
length
(
)
;
ii
++
)
{
response
[
ii
+
2
]
=
termType
.
charAt
(
ii
)
;
}
return
response
;
}
}
return
null
;
}
}
<EOF>
