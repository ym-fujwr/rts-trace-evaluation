package
org
.
apache
.
commons
.
net
.
util
;
import
java
.
lang
.
reflect
.
InvocationTargetException
;
import
java
.
lang
.
reflect
.
Method
;
import
javax
.
net
.
ssl
.
SSLSocket
;
public
class
SSLSocketUtils
{
public
static
boolean
enableEndpointNameVerification
(
final
SSLSocket
socket
)
{
try
{
final
Class
<
?
>
cls
=
Class
.
forName
(
"javax.net.ssl.SSLParameters"
)
;
final
Method
setEndpointIdentificationAlgorithm
=
cls
.
getDeclaredMethod
(
"setEndpointIdentificationAlgorithm"
,
String
.
class
)
;
final
Method
getSSLParameters
=
SSLSocket
.
class
.
getDeclaredMethod
(
"getSSLParameters"
)
;
final
Method
setSSLParameters
=
SSLSocket
.
class
.
getDeclaredMethod
(
"setSSLParameters"
,
cls
)
;
if
(
setEndpointIdentificationAlgorithm
!=
null
&&
getSSLParameters
!=
null
&&
setSSLParameters
!=
null
)
{
final
Object
sslParams
=
getSSLParameters
.
invoke
(
socket
)
;
if
(
sslParams
!=
null
)
{
setEndpointIdentificationAlgorithm
.
invoke
(
sslParams
,
"HTTPS"
)
;
setSSLParameters
.
invoke
(
socket
,
sslParams
)
;
return
true
;
}
}
}
catch
(
final
SecurityException
|
ClassNotFoundException
|
NoSuchMethodException
|
IllegalArgumentException
|
IllegalAccessException
|
InvocationTargetException
e
)
{
}
return
false
;
}
private
SSLSocketUtils
(
)
{
}
}
<EOF>
