package
org
.
apache
.
commons
.
net
.
smtp
;
import
java
.
text
.
SimpleDateFormat
;
import
java
.
util
.
Date
;
import
java
.
util
.
Locale
;
public
class
SimpleSMTPHeader
{
private
final
String
subject
;
private
final
String
from
;
private
final
String
to
;
private
final
StringBuffer
headerFields
;
private
boolean
hasHeaderDate
;
private
StringBuffer
cc
;
public
SimpleSMTPHeader
(
final
String
from
,
final
String
to
,
final
String
subject
)
{
if
(
from
==
null
)
{
throw
new
IllegalArgumentException
(
"From cannot be null"
)
;
}
this
.
to
=
to
;
this
.
from
=
from
;
this
.
subject
=
subject
;
this
.
headerFields
=
new
StringBuffer
(
)
;
this
.
cc
=
null
;
}
public
void
addCC
(
final
String
address
)
{
if
(
cc
==
null
)
{
cc
=
new
StringBuffer
(
)
;
}
else
{
cc
.
append
(
", "
)
;
}
cc
.
append
(
address
)
;
}
public
void
addHeaderField
(
final
String
headerField
,
final
String
value
)
{
if
(
!
hasHeaderDate
&&
"Date"
.
equals
(
headerField
)
)
{
hasHeaderDate
=
true
;
}
headerFields
.
append
(
headerField
)
;
headerFields
.
append
(
": "
)
;
headerFields
.
append
(
value
)
;
headerFields
.
append
(
'\n'
)
;
}
@
Override
public
String
toString
(
)
{
final
StringBuilder
header
=
new
StringBuilder
(
)
;
final
String
pattern
=
"EEE, dd MMM yyyy HH:mm:ss Z"
;
final
SimpleDateFormat
format
=
new
SimpleDateFormat
(
pattern
,
Locale
.
ENGLISH
)
;
if
(
!
hasHeaderDate
)
{
addHeaderField
(
"Date"
,
format
.
format
(
new
Date
(
)
)
)
;
}
if
(
headerFields
.
length
(
)
>
0
)
{
header
.
append
(
headerFields
.
toString
(
)
)
;
}
header
.
append
(
"From: "
)
.
append
(
from
)
.
append
(
"\n"
)
;
if
(
to
!=
null
)
{
header
.
append
(
"To: "
)
.
append
(
to
)
.
append
(
"\n"
)
;
}
if
(
cc
!=
null
)
{
header
.
append
(
"Cc: "
)
.
append
(
cc
.
toString
(
)
)
.
append
(
"\n"
)
;
}
if
(
subject
!=
null
)
{
header
.
append
(
"Subject: "
)
.
append
(
subject
)
.
append
(
"\n"
)
;
}
header
.
append
(
'\n'
)
;
return
header
.
toString
(
)
;
}
}
<EOF>
