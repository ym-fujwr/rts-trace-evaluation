package
com
.
fasterxml
.
jackson
.
dataformat
.
xml
.
deser
;
class
ElementWrapper
{
protected
final
ElementWrapper
_parent
;
protected
final
String
_wrapperName
;
protected
final
String
_wrapperNamespace
;
private
ElementWrapper
(
ElementWrapper
parent
)
{
_parent
=
parent
;
_wrapperName
=
null
;
_wrapperNamespace
=
""
;
}
private
ElementWrapper
(
ElementWrapper
parent
,
String
wrapperLocalName
,
String
wrapperNamespace
)
{
_parent
=
parent
;
_wrapperName
=
wrapperLocalName
;
_wrapperNamespace
=
(
wrapperNamespace
==
null
)
?
""
:
wrapperNamespace
;
}
public
static
ElementWrapper
matchingWrapper
(
ElementWrapper
parent
,
String
wrapperLocalName
,
String
wrapperNamespace
)
{
return
new
ElementWrapper
(
parent
,
wrapperLocalName
,
wrapperNamespace
)
;
}
public
ElementWrapper
intermediateWrapper
(
)
{
return
new
ElementWrapper
(
this
,
null
,
null
)
;
}
public
boolean
isMatching
(
)
{
return
_wrapperName
!=
null
;
}
public
String
getWrapperLocalName
(
)
{
return
_wrapperName
;
}
public
String
getWrapperNamespace
(
)
{
return
_wrapperNamespace
;
}
public
ElementWrapper
getParent
(
)
{
return
_parent
;
}
public
boolean
matchesWrapper
(
String
localName
,
String
ns
)
{
if
(
_wrapperName
==
null
)
{
return
true
;
}
if
(
ns
==
null
)
{
ns
=
""
;
}
return
_wrapperName
.
equals
(
localName
)
&&
_wrapperNamespace
.
equals
(
ns
)
;
}
@
Override
public
String
toString
(
)
{
if
(
_parent
==
null
)
{
return
"Wrapper: ROOT, matching: "
+
_wrapperName
;
}
if
(
_wrapperName
==
null
)
{
return
"Wrapper: empty"
;
}
return
"Wrapper: branch, matching: "
+
_wrapperName
;
}
}
<EOF>
