diff --git a/src/test/java/org/apache/commons/cli/TypeHandlerTest.java b/src/test/java/org/apache/commons/cli/TypeHandlerTest.java
index 03fd8711..de9e89c6 100644
--- a/src/test/java/org/apache/commons/cli/TypeHandlerTest.java
+++ b/src/test/java/org/apache/commons/cli/TypeHandlerTest.java
@@ -19,0 +20 @@ package org.apache.commons.cli;
+import static org.junit.jupiter.api.Assertions.assertThrows;
@@ -46,3 +47,4 @@ public class TypeHandlerTest {
-    @Test(expected = ParseException.class)
-    public void testCreateValueClass_notFound() throws Exception {
-        TypeHandler.createValue("what ever", PatternOptionBuilder.CLASS_VALUE);
+    @Test
+    public void testCreateValueClass_notFound() {
+        assertThrows(ParseException.class, () ->
+                TypeHandler.createValue("what ever", PatternOptionBuilder.CLASS_VALUE));
@@ -51,3 +53,4 @@ public class TypeHandlerTest {
-    @Test(expected = UnsupportedOperationException.class)
-    public void testCreateValueDate() throws Exception {
-        TypeHandler.createValue("what ever", PatternOptionBuilder.DATE_VALUE);
+    @Test
+    public void testCreateValueDate() {
+        assertThrows(UnsupportedOperationException.class, () ->
+                TypeHandler.createValue("what ever", PatternOptionBuilder.DATE_VALUE));
@@ -64,3 +67,4 @@ public class TypeHandlerTest {
-    @Test(expected = ParseException.class)
-    public void testCreateValueExistingFile_nonExistingFile() throws Exception {
-        TypeHandler.createValue("non-existing.file", PatternOptionBuilder.EXISTING_FILE_VALUE);
+    @Test
+    public void testCreateValueExistingFile_nonExistingFile() {
+        assertThrows(ParseException.class, () ->
+                TypeHandler.createValue("non-existing.file", PatternOptionBuilder.EXISTING_FILE_VALUE));
@@ -75,3 +79,4 @@ public class TypeHandlerTest {
-    @Test(expected = UnsupportedOperationException.class)
-    public void testCreateValueFiles() throws Exception {
-        TypeHandler.createValue("some.files", PatternOptionBuilder.FILES_VALUE);
+    @Test
+    public void testCreateValueFiles() {
+        assertThrows(UnsupportedOperationException.class, () ->
+                TypeHandler.createValue("some.files", PatternOptionBuilder.FILES_VALUE));
@@ -80,3 +85,4 @@ public class TypeHandlerTest {
-    @Test(expected = ParseException.class)
-    public void testCreateValueInteger_failure() throws Exception {
-        TypeHandler.createValue("just-a-string", Integer.class);
+    @Test
+    public void testCreateValueInteger_failure() {
+        assertThrows(ParseException.class, () ->
+                TypeHandler.createValue("just-a-string", Integer.class));
@@ -95,3 +101,4 @@ public class TypeHandlerTest {
-    @Test(expected = ParseException.class)
-    public void testCreateValueNumber_noNumber() throws Exception {
-        TypeHandler.createValue("not a number", PatternOptionBuilder.NUMBER_VALUE);
+    @Test
+    public void testCreateValueNumber_noNumber() {
+        assertThrows(ParseException.class, () ->
+                TypeHandler.createValue("not a number", PatternOptionBuilder.NUMBER_VALUE));
@@ -106,3 +113,4 @@ public class TypeHandlerTest {
-    @Test(expected = ParseException.class)
-    public void testCreateValueObject_notInstantiableClass() throws Exception {
-        TypeHandler.createValue(NotInstantiable.class.getName(), PatternOptionBuilder.OBJECT_VALUE);
+    @Test
+    public void testCreateValueObject_notInstantiableClass() {
+        assertThrows(ParseException.class, () ->
+                TypeHandler.createValue(NotInstantiable.class.getName(), PatternOptionBuilder.OBJECT_VALUE));
@@ -111,3 +119,4 @@ public class TypeHandlerTest {
-    @Test(expected = ParseException.class)
-    public void testCreateValueObject_unknownClass() throws Exception {
-        TypeHandler.createValue("unknown", PatternOptionBuilder.OBJECT_VALUE);
+    @Test
+    public void testCreateValueObject_unknownClass() {
+        assertThrows(ParseException.class, () ->
+                TypeHandler.createValue("unknown", PatternOptionBuilder.OBJECT_VALUE));
@@ -128,3 +137,4 @@ public class TypeHandlerTest {
-    @Test(expected = ParseException.class)
-    public void testCreateValueURL_malformed() throws Exception {
-        TypeHandler.createValue("malformed-url", PatternOptionBuilder.URL_VALUE);
+    @Test
+    public void testCreateValueURL_malformed() {
+        assertThrows(ParseException.class, () ->
+                TypeHandler.createValue("malformed-url", PatternOptionBuilder.URL_VALUE));
@@ -131,0 +142 @@ public class TypeHandlerTest {
+
