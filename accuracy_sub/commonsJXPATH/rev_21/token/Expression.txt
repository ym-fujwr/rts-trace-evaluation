package
org
.
apache
.
commons
.
jxpath
.
ri
.
compiler
;
import
org
.
apache
.
commons
.
jxpath
.
NodeSet
;
import
org
.
apache
.
commons
.
jxpath
.
Pointer
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
EvalContext
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
NodePointer
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
QName
;
import
org
.
apache
.
commons
.
jxpath
.
util
.
ValueUtils
;
import
java
.
util
.
Collections
;
import
java
.
util
.
Iterator
;
import
java
.
util
.
Locale
;
public
abstract
class
Expression
{
protected
static
final
Double
ZERO
=
Double
.
valueOf
(
0
)
;
protected
static
final
Double
ONE
=
Double
.
valueOf
(
1
)
;
protected
static
final
Double
NOT_A_NUMBER
=
Double
.
valueOf
(
Double
.
NaN
)
;
private
boolean
contextDependencyKnown
=
false
;
private
boolean
contextDependent
;
public
synchronized
boolean
isContextDependent
(
)
{
if
(
!
contextDependencyKnown
)
{
contextDependent
=
computeContextDependent
(
)
;
contextDependencyKnown
=
true
;
}
return
contextDependent
;
}
public
abstract
boolean
computeContextDependent
(
)
;
public
abstract
Object
computeValue
(
EvalContext
context
)
;
public
abstract
Object
compute
(
EvalContext
context
)
;
public
Iterator
iterate
(
final
EvalContext
context
)
{
final
Object
result
=
compute
(
context
)
;
if
(
result
instanceof
EvalContext
)
{
return
new
ValueIterator
(
(
EvalContext
)
result
)
;
}
if
(
result
instanceof
NodeSet
)
{
return
new
ValueIterator
(
(
(
NodeSet
)
result
)
.
getPointers
(
)
.
iterator
(
)
)
;
}
return
ValueUtils
.
iterate
(
result
)
;
}
public
Iterator
iteratePointers
(
final
EvalContext
context
)
{
final
Object
result
=
compute
(
context
)
;
if
(
result
==
null
)
{
return
Collections
.
EMPTY_LIST
.
iterator
(
)
;
}
if
(
result
instanceof
EvalContext
)
{
return
(
EvalContext
)
result
;
}
if
(
result
instanceof
NodeSet
)
{
return
new
PointerIterator
(
(
(
NodeSet
)
result
)
.
getPointers
(
)
.
iterator
(
)
,
new
QName
(
null
,
"value"
)
,
context
.
getRootContext
(
)
.
getCurrentNodePointer
(
)
.
getLocale
(
)
)
;
}
return
new
PointerIterator
(
ValueUtils
.
iterate
(
result
)
,
new
QName
(
null
,
"value"
)
,
context
.
getRootContext
(
)
.
getCurrentNodePointer
(
)
.
getLocale
(
)
)
;
}
public
static
class
PointerIterator
implements
Iterator
{
private
final
Iterator
iterator
;
private
final
QName
qname
;
private
final
Locale
locale
;
@
Deprecated
public
PointerIterator
(
final
Iterator
it
,
final
QName
qname
,
final
Locale
locale
)
{
this
.
iterator
=
it
;
this
.
qname
=
qname
;
this
.
locale
=
locale
;
}
@
Override
public
boolean
hasNext
(
)
{
return
iterator
.
hasNext
(
)
;
}
@
Override
public
Object
next
(
)
{
final
Object
o
=
iterator
.
next
(
)
;
return
o
instanceof
Pointer
?
o
:
NodePointer
.
newNodePointer
(
qname
,
o
,
locale
)
;
}
@
Override
public
void
remove
(
)
{
throw
new
UnsupportedOperationException
(
)
;
}
}
public
static
class
ValueIterator
implements
Iterator
{
private
final
Iterator
iterator
;
public
ValueIterator
(
final
Iterator
it
)
{
this
.
iterator
=
it
;
}
@
Override
public
boolean
hasNext
(
)
{
return
iterator
.
hasNext
(
)
;
}
@
Override
public
Object
next
(
)
{
final
Object
o
=
iterator
.
next
(
)
;
return
o
instanceof
Pointer
?
(
(
Pointer
)
o
)
.
getValue
(
)
:
o
;
}
@
Override
public
void
remove
(
)
{
throw
new
UnsupportedOperationException
(
)
;
}
}
}
<EOF>
