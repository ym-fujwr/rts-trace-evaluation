package
org
.
apache
.
commons
.
jxpath
.
ri
.
compiler
;
import
org
.
apache
.
commons
.
jxpath
.
AbstractFactory
;
import
org
.
apache
.
commons
.
jxpath
.
JXPathContext
;
import
org
.
apache
.
commons
.
jxpath
.
Pointer
;
import
org
.
apache
.
commons
.
jxpath
.
TestBean
;
public
class
VariableFactory
extends
AbstractFactory
{
@
Override
public
boolean
createObject
(
final
JXPathContext
context
,
final
Pointer
pointer
,
final
Object
parent
,
final
String
name
,
final
int
index
)
{
if
(
name
.
equals
(
"testArray"
)
)
{
(
(
TestBean
[
]
)
parent
)
[
index
]
=
new
TestBean
(
)
;
return
true
;
}
else
if
(
name
.
equals
(
"stringArray"
)
)
{
(
(
String
[
]
)
parent
)
[
index
]
=
""
;
return
true
;
}
else
if
(
name
.
equals
(
"array"
)
)
{
(
(
String
[
]
)
parent
)
[
index
]
=
""
;
return
true
;
}
return
false
;
}
@
Override
public
boolean
declareVariable
(
final
JXPathContext
context
,
final
String
name
)
{
if
(
name
.
equals
(
"test"
)
)
{
context
.
getVariables
(
)
.
declareVariable
(
name
,
new
TestBean
(
)
)
;
return
true
;
}
else
if
(
name
.
equals
(
"testArray"
)
)
{
context
.
getVariables
(
)
.
declareVariable
(
name
,
new
TestBean
[
0
]
)
;
return
true
;
}
else
if
(
name
.
equals
(
"stringArray"
)
)
{
context
.
getVariables
(
)
.
declareVariable
(
name
,
new
String
[
]
{
"Value1"
}
)
;
return
true
;
}
context
.
getVariables
(
)
.
declareVariable
(
name
,
null
)
;
return
true
;
}
}
<EOF>
