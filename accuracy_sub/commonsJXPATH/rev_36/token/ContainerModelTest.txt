package
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
container
;
import
java
.
util
.
ArrayList
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
List
;
import
java
.
util
.
Map
;
import
org
.
apache
.
commons
.
jxpath
.
Container
;
import
org
.
apache
.
commons
.
jxpath
.
JXPathContext
;
import
org
.
apache
.
commons
.
jxpath
.
JXPathTestCase
;
public
class
ContainerModelTest
extends
JXPathTestCase
{
private
class
ArrayContainer
implements
Container
{
private
static
final
long
serialVersionUID
=
1L
;
private
final
String
[
]
array
=
{
"foo"
,
"bar"
}
;
@
Override
public
Object
getValue
(
)
{
return
array
;
}
@
Override
public
void
setValue
(
final
Object
value
)
{
throw
new
UnsupportedOperationException
(
)
;
}
}
public
class
ListContainer
implements
Container
{
private
static
final
long
serialVersionUID
=
1L
;
private
final
List
list
;
public
ListContainer
(
)
{
list
=
new
ArrayList
(
)
;
list
.
add
(
"foo"
)
;
list
.
add
(
"bar"
)
;
}
@
Override
public
Object
getValue
(
)
{
return
list
;
}
@
Override
public
void
setValue
(
final
Object
value
)
{
throw
new
UnsupportedOperationException
(
)
;
}
}
public
class
Bean
{
private
final
ListContainer
container
=
new
ListContainer
(
)
;
public
ListContainer
getContainer
(
)
{
return
container
;
}
}
public
void
testContainerVariableWithCollection
(
)
{
final
ArrayContainer
container
=
new
ArrayContainer
(
)
;
final
String
[
]
array
=
(
String
[
]
)
container
.
getValue
(
)
;
final
JXPathContext
context
=
JXPathContext
.
newContext
(
null
)
;
context
.
getVariables
(
)
.
declareVariable
(
"list"
,
container
)
;
assertXPathValueAndPointer
(
context
,
"$list"
,
array
,
"$list"
)
;
assertXPathValueAndPointer
(
context
,
"$list[1]"
,
"foo"
,
"$list[1]"
)
;
assertXPathValueAndPointer
(
context
,
"$list[2]"
,
"bar"
,
"$list[2]"
)
;
assertXPathSetValue
(
context
,
"$list[1]"
,
"baz"
)
;
assertEquals
(
"Checking setValue(index)"
,
"baz"
,
array
[
0
]
)
;
}
public
void
testContainerPropertyWithCollection
(
)
{
final
Bean
bean
=
new
Bean
(
)
;
final
List
list
=
(
List
)
bean
.
getContainer
(
)
.
getValue
(
)
;
final
JXPathContext
context
=
JXPathContext
.
newContext
(
bean
)
;
assertXPathValueAndPointer
(
context
,
"/container"
,
list
,
"/container"
)
;
assertXPathValueAndPointer
(
context
,
"/container[1]"
,
list
.
get
(
0
)
,
"/container[1]"
)
;
assertXPathValueAndPointer
(
context
,
"/container[2]"
,
list
.
get
(
1
)
,
"/container[2]"
)
;
assertXPathSetValue
(
context
,
"/container[1]"
,
"baz"
)
;
assertEquals
(
"Checking setValue(index)"
,
"baz"
,
list
.
get
(
0
)
)
;
}
public
void
testContainerMapWithCollection
(
)
{
final
ListContainer
container
=
new
ListContainer
(
)
;
final
List
list
=
(
List
)
container
.
getValue
(
)
;
final
Map
map
=
new
HashMap
(
)
;
map
.
put
(
"container"
,
container
)
;
final
JXPathContext
context
=
JXPathContext
.
newContext
(
map
)
;
assertXPathValueAndPointer
(
context
,
"/container"
,
list
,
"/.[@name='container']"
)
;
assertXPathValueAndPointer
(
context
,
"/container[1]"
,
list
.
get
(
0
)
,
"/.[@name='container'][1]"
)
;
assertXPathValueAndPointer
(
context
,
"/container[2]"
,
list
.
get
(
1
)
,
"/.[@name='container'][2]"
)
;
assertXPathSetValue
(
context
,
"/container[1]"
,
"baz"
)
;
assertEquals
(
"Checking setValue(index)"
,
"baz"
,
list
.
get
(
0
)
)
;
}
public
void
testContainerRootWithCollection
(
)
{
final
ArrayContainer
container
=
new
ArrayContainer
(
)
;
final
String
[
]
array
=
(
String
[
]
)
container
.
getValue
(
)
;
final
JXPathContext
context
=
JXPathContext
.
newContext
(
container
)
;
context
.
getVariables
(
)
.
declareVariable
(
"list"
,
container
)
;
assertXPathValueAndPointer
(
context
,
"/"
,
array
,
"/"
)
;
assertXPathValueAndPointer
(
context
,
"/.[1]"
,
"foo"
,
"/.[1]"
)
;
assertXPathValueAndPointer
(
context
,
"/.[2]"
,
"bar"
,
"/.[2]"
)
;
assertXPathSetValue
(
context
,
"/.[1]"
,
"baz"
)
;
assertEquals
(
"Checking setValue(index)"
,
"baz"
,
array
[
0
]
)
;
}
}
<EOF>
