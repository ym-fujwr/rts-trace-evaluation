package
org
.
apache
.
commons
.
jxpath
.
ri
.
model
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
Map
;
import
org
.
apache
.
commons
.
jxpath
.
AbstractFactory
;
import
org
.
apache
.
commons
.
jxpath
.
JXPathContext
;
import
org
.
apache
.
commons
.
jxpath
.
NestedTestBean
;
import
org
.
apache
.
commons
.
jxpath
.
Pointer
;
import
org
.
apache
.
commons
.
jxpath
.
TestBean
;
import
org
.
apache
.
commons
.
jxpath
.
TestMixedModelBean
;
public
class
TestMixedModelFactory
extends
AbstractFactory
{
@
Override
public
boolean
createObject
(
final
JXPathContext
context
,
final
Pointer
pointer
,
final
Object
parent
,
final
String
name
,
final
int
index
)
{
if
(
name
.
equals
(
"nestedBean"
)
)
{
(
(
TestBean
)
parent
)
.
setNestedBean
(
new
NestedTestBean
(
"newName"
)
)
;
return
true
;
}
else
if
(
name
.
equals
(
"beans"
)
)
{
final
TestBean
bean
=
(
TestBean
)
parent
;
if
(
bean
.
getBeans
(
)
==
null
||
index
>=
bean
.
getBeans
(
)
.
length
)
{
bean
.
setBeans
(
new
NestedTestBean
[
index
+
1
]
)
;
}
bean
.
getBeans
(
)
[
index
]
=
new
NestedTestBean
(
"newName"
)
;
return
true
;
}
else
if
(
name
.
equals
(
"map"
)
)
{
(
(
TestBean
)
parent
)
.
setMap
(
new
HashMap
(
)
)
;
return
true
;
}
else
if
(
name
.
equals
(
"TestKey5"
)
)
{
final
TestBean
tb
=
new
TestBean
(
)
;
tb
.
setNestedBean
(
null
)
;
tb
.
setBeans
(
null
)
;
(
(
Map
)
parent
)
.
put
(
name
,
tb
)
;
return
true
;
}
else
if
(
name
.
equals
(
"matrix"
)
)
{
final
int
[
]
[
]
matrix
=
new
int
[
2
]
[
]
;
matrix
[
0
]
=
new
int
[
1
]
;
(
(
TestMixedModelBean
)
parent
)
.
setMatrix
(
matrix
)
;
return
true
;
}
return
false
;
}
@
Override
public
boolean
declareVariable
(
final
JXPathContext
context
,
final
String
name
)
{
return
false
;
}
}
<EOF>
