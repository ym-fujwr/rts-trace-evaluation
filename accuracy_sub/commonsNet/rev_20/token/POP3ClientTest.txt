package
org
.
apache
.
commons
.
net
.
pop3
;
import
java
.
io
.
IOException
;
import
java
.
net
.
InetAddress
;
import
junit
.
framework
.
TestCase
;
public
class
POP3ClientTest
extends
TestCase
{
POP3Client
p
;
String
user
=
POP3Constants
.
user
;
String
emptyUser
=
POP3Constants
.
emptyuser
;
String
password
=
POP3Constants
.
password
;
String
mailhost
=
POP3Constants
.
mailhost
;
public
POP3ClientTest
(
final
String
name
)
{
super
(
name
)
;
}
private
void
connect
(
)
throws
Exception
{
p
.
connect
(
InetAddress
.
getByName
(
mailhost
)
)
;
assertTrue
(
p
.
isConnected
(
)
)
;
assertEquals
(
POP3
.
AUTHORIZATION_STATE
,
p
.
getState
(
)
)
;
}
private
void
login
(
)
throws
Exception
{
assertTrue
(
p
.
login
(
user
,
password
)
)
;
assertEquals
(
POP3
.
TRANSACTION_STATE
,
p
.
getState
(
)
)
;
}
private
void
reset
(
)
throws
IOException
{
if
(
p
==
null
)
{
}
else
if
(
p
.
isConnected
(
)
)
{
p
.
disconnect
(
)
;
}
p
=
null
;
p
=
new
POP3Client
(
)
;
}
public
void
testInvalidLoginWithBadName
(
)
throws
Exception
{
reset
(
)
;
connect
(
)
;
assertFalse
(
p
.
login
(
"badusername"
,
password
)
)
;
}
public
void
testInvalidLoginWithBadPassword
(
)
throws
Exception
{
reset
(
)
;
connect
(
)
;
assertFalse
(
p
.
login
(
user
,
"badpassword"
)
)
;
}
public
void
testLoginFromWrongState
(
)
throws
Exception
{
reset
(
)
;
assertFalse
(
p
.
login
(
user
,
password
)
)
;
connect
(
)
;
p
.
setState
(
POP3
.
TRANSACTION_STATE
)
;
assertFalse
(
p
.
login
(
user
,
password
)
)
;
p
.
disconnect
(
)
;
connect
(
)
;
p
.
setState
(
POP3
.
UPDATE_STATE
)
;
assertFalse
(
p
.
login
(
user
,
password
)
)
;
p
.
disconnect
(
)
;
}
public
void
testLogoutFromAllStates
(
)
throws
Exception
{
reset
(
)
;
connect
(
)
;
login
(
)
;
assertTrue
(
p
.
logout
(
)
)
;
assertEquals
(
POP3
.
UPDATE_STATE
,
p
.
getState
(
)
)
;
reset
(
)
;
connect
(
)
;
login
(
)
;
p
.
setState
(
POP3
.
UPDATE_STATE
)
;
assertTrue
(
p
.
logout
(
)
)
;
}
public
void
testValidLoginWithNameAndPassword
(
)
throws
Exception
{
reset
(
)
;
connect
(
)
;
login
(
)
;
}
}
<EOF>
