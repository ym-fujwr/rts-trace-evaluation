diff --git a/src/main/java/org/apache/commons/net/util/SSLSocketUtils.java b/src/main/java/org/apache/commons/net/util/SSLSocketUtils.java
index 3261c08cb..5485a8b73 100644
--- a/src/main/java/org/apache/commons/net/util/SSLSocketUtils.java
+++ b/src/main/java/org/apache/commons/net/util/SSLSocketUtils.java
@@ -21,3 +21 @@ package org.apache.commons.net.util;
-import java.lang.reflect.InvocationTargetException;
-import java.lang.reflect.Method;
-
+import javax.net.ssl.SSLParameters;
@@ -31,0 +30 @@ public class SSLSocketUtils {
+
@@ -36 +35 @@ public class SSLSocketUtils {
-     * @return {@code true} on success (this is only supported on Java 1.7+)
+     * @return {@code true} on success
@@ -39,13 +38,5 @@ public class SSLSocketUtils {
-        try {
-            final Class<?> cls = Class.forName("javax.net.ssl.SSLParameters");
-            final Method setEndpointIdentificationAlgorithm = cls.getDeclaredMethod("setEndpointIdentificationAlgorithm", String.class);
-            final Method getSSLParameters = SSLSocket.class.getDeclaredMethod("getSSLParameters");
-            final Method setSSLParameters = SSLSocket.class.getDeclaredMethod("setSSLParameters", cls);
-            final Object sslParams = getSSLParameters.invoke(socket);
-            if (sslParams != null) {
-                setEndpointIdentificationAlgorithm.invoke(sslParams, "HTTPS");
-                setSSLParameters.invoke(socket, sslParams);
-                return true;
-            }
-        } catch (final SecurityException | ClassNotFoundException | NoSuchMethodException | IllegalArgumentException | IllegalAccessException
-                | InvocationTargetException e) { // Ignored
+        final SSLParameters sslParameters = socket.getSSLParameters();
+        if (sslParameters != null) {
+            sslParameters.setEndpointIdentificationAlgorithm("HTTPS");
+            socket.setSSLParameters(sslParameters);
+            return true;
