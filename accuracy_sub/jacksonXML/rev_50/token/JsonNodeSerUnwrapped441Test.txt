package
com
.
fasterxml
.
jackson
.
dataformat
.
xml
.
node
;
import
com
.
fasterxml
.
jackson
.
annotation
.
JsonUnwrapped
;
import
com
.
fasterxml
.
jackson
.
databind
.
ObjectMapper
;
import
com
.
fasterxml
.
jackson
.
databind
.
ObjectWriter
;
import
com
.
fasterxml
.
jackson
.
databind
.
node
.
ArrayNode
;
import
com
.
fasterxml
.
jackson
.
databind
.
node
.
ObjectNode
;
import
com
.
fasterxml
.
jackson
.
dataformat
.
xml
.
XmlTestBase
;
import
com
.
fasterxml
.
jackson
.
dataformat
.
xml
.
ser
.
ToXmlGenerator
;
public
class
JsonNodeSerUnwrapped441Test
extends
XmlTestBase
{
static
class
Stuff441
{
@
JsonUnwrapped
public
ObjectNode
node
;
public
Stuff441
(
ObjectNode
n
)
{
node
=
n
;
}
}
private
final
ObjectMapper
XML_MAPPER
=
newMapper
(
)
;
private
final
ObjectWriter
XML_WRITER_WRAP
=
XML_MAPPER
.
writer
(
)
.
without
(
ToXmlGenerator
.
Feature
.
UNWRAP_ROOT_OBJECT_NODE
)
;
private
final
ObjectWriter
XML_WRITER_UNWRAP
=
XML_MAPPER
.
writer
(
)
.
with
(
ToXmlGenerator
.
Feature
.
UNWRAP_ROOT_OBJECT_NODE
)
;
public
void
testOlderWorkaround
(
)
throws
Exception
{
ObjectNode
xml
=
XML_MAPPER
.
createObjectNode
(
)
;
ObjectNode
child
=
xml
.
putObject
(
"root"
)
;
child
.
put
(
"id"
,
11
)
;
child
.
put
(
"enabled"
,
false
)
;
assertEquals
(
"<root><id>11</id><enabled>false</enabled></root>"
,
XML_WRITER_WRAP
.
withRootName
(
"root"
)
.
writeValueAsString
(
child
)
)
;
}
public
void
testSimpleNode
(
)
throws
Exception
{
ObjectNode
root
=
XML_MAPPER
.
createObjectNode
(
)
;
ObjectNode
child
=
root
.
putObject
(
"root"
)
;
child
.
put
(
"id"
,
13
)
;
child
.
put
(
"enabled"
,
true
)
;
final
String
INNER
=
"<root><id>13</id><enabled>true</enabled></root>"
;
assertEquals
(
"<ObjectNode>"
+
INNER
+
"</ObjectNode>"
,
XML_WRITER_WRAP
.
writeValueAsString
(
root
)
)
;
assertEquals
(
INNER
,
XML_WRITER_UNWRAP
.
writeValueAsString
(
root
)
)
;
}
public
void
testArrayInObjectNode
(
)
throws
Exception
{
ObjectNode
root
=
XML_MAPPER
.
createObjectNode
(
)
;
ObjectNode
child
=
root
.
putObject
(
"root"
)
;
ArrayNode
arr
=
child
.
putArray
(
"array"
)
;
arr
.
add
(
"first"
)
;
ObjectNode
second
=
arr
.
addObject
(
)
;
second
.
put
(
"value"
,
137
)
;
final
String
INNER
=
"<root><array>first</array><array><value>137</value></array></root>"
;
assertEquals
(
"<ObjectNode>"
+
INNER
+
"</ObjectNode>"
,
XML_WRITER_WRAP
.
writeValueAsString
(
root
)
)
;
assertEquals
(
INNER
,
XML_WRITER_UNWRAP
.
writeValueAsString
(
root
)
)
;
}
public
void
testNodeAsProperty
(
)
throws
Exception
{
Stuff441
stuff
=
new
Stuff441
(
XML_MAPPER
.
createObjectNode
(
)
)
;
stuff
.
node
.
put
(
"key"
,
"value"
)
;
}
}
<EOF>
