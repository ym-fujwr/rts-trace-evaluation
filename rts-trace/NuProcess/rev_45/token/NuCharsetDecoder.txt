package
com
.
zaxxer
.
nuprocess
.
codec
;
import
com
.
zaxxer
.
nuprocess
.
NuProcess
;
import
com
.
zaxxer
.
nuprocess
.
NuProcessHandler
;
import
java
.
nio
.
ByteBuffer
;
import
java
.
nio
.
CharBuffer
;
import
java
.
nio
.
charset
.
Charset
;
import
java
.
nio
.
charset
.
CharsetDecoder
;
import
java
.
nio
.
charset
.
CoderResult
;
public
final
class
NuCharsetDecoder
{
private
final
NuCharsetDecoderHandler
handler
;
private
final
CharsetDecoder
decoder
;
private
final
CharBuffer
charBuffer
;
public
NuCharsetDecoder
(
NuCharsetDecoderHandler
handler
,
Charset
charset
)
{
this
(
handler
,
charset
.
newDecoder
(
)
)
;
}
public
NuCharsetDecoder
(
NuCharsetDecoderHandler
handler
,
CharsetDecoder
decoder
)
{
this
.
handler
=
handler
;
this
.
decoder
=
decoder
;
this
.
charBuffer
=
CharBuffer
.
allocate
(
NuProcess
.
BUFFER_CAPACITY
)
;
}
public
void
onOutput
(
ByteBuffer
buffer
,
boolean
closed
)
{
CoderResult
coderResult
=
decoder
.
decode
(
buffer
,
charBuffer
,
closed
)
;
charBuffer
.
flip
(
)
;
this
.
handler
.
onDecode
(
charBuffer
,
closed
,
coderResult
)
;
charBuffer
.
compact
(
)
;
}
}
<EOF>
