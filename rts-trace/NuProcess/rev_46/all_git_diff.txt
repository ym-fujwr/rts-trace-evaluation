diff --git a/mvnvm.properties b/mvnvm.properties
deleted file mode 100644
index 557db81..0000000
--- a/mvnvm.properties
+++ /dev/null
@@ -1 +0,0 @@
-mvn_version=3.8.5
diff --git a/pom.xml b/pom.xml
index 3888426..9f8d77b 100644
--- a/pom.xml
+++ b/pom.xml
@@ -4,0 +5,2 @@
+    <!-- For release: mvn release:perform -Darguments=-Dgpg.passphrase=PASSPHRASE -->
+
@@ -12,0 +15 @@
+
@@ -16,0 +20,7 @@
+
+    <scm>
+        <connection>scm:git:git@github.com:brettwooldridge/NuProcess.git</connection>
+        <developerConnection>scm:git:git@github.com:brettwooldridge/NuProcess.git</developerConnection>
+        <url>git@github.com:brettwooldridge/NuProcess.git</url>
+    </scm>
+
@@ -39,4 +48,0 @@
-        <developer>
-            <name>Bryan Turner</name>
-            <email>incommand@hotmail.com</email>
-        </developer>
@@ -45,12 +50,0 @@
-    <scm>
-        <connection>scm:git:git@github.com:brettwooldridge/NuProcess.git</connection>
-        <developerConnection>scm:git:git@github.com:brettwooldridge/NuProcess.git</developerConnection>
-        <url>git@github.com:brettwooldridge/NuProcess.git</url>
-    </scm>
-    <distributionManagement>
-        <snapshotRepository>
-            <id>ossrh</id>
-            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
-        </snapshotRepository>
-    </distributionManagement>
-
@@ -59,5 +52,0 @@
-
-        <!-- When releasing a new version, this property controls whether the staged artifacts will be automatically
-             released in Nexus. If this is set to false (-DautoReleaseStagedArtifacts=false), artifacts will need to
-             be manually released via the Nexus UI at https://oss.sonatype.org -->
-        <autoReleaseStagedArtifacts>true</autoReleaseStagedArtifacts>
@@ -65,0 +55,6 @@
+    <parent>
+        <groupId>org.sonatype.oss</groupId>
+        <artifactId>oss-parent</artifactId>
+        <version>7</version>
+    </parent>
+
@@ -70 +65 @@
-            <version>5.11.0</version>
+            <version>5.8.0</version>
@@ -72 +66,0 @@
-
@@ -81,2 +75,2 @@
-            <artifactId>hamcrest</artifactId>
-            <version>2.2</version>
+            <artifactId>hamcrest-junit</artifactId>
+            <version>2.0.0.0</version>
@@ -90,75 +83,0 @@
-        <pluginManagement>
-            <plugins>
-                <plugin>
-                    <groupId>org.apache.maven.plugins</groupId>
-                    <artifactId>maven-clean-plugin</artifactId>
-                    <version>3.2.0</version>
-                </plugin>
-                <plugin>
-                    <groupId>org.apache.maven.plugins</groupId>
-                    <artifactId>maven-compiler-plugin</artifactId>
-                    <version>3.10.1</version>
-                </plugin>
-                <plugin>
-                    <groupId>org.apache.maven.plugins</groupId>
-                    <artifactId>maven-deploy-plugin</artifactId>
-                    <version>2.8.2</version>
-                </plugin>
-                <plugin>
-                    <groupId>org.apache.maven.plugins</groupId>
-                    <artifactId>maven-enforcer-plugin</artifactId>
-                    <version>3.0.0</version>
-                </plugin>
-                <plugin>
-                    <groupId>org.apache.maven.plugins</groupId>
-                    <artifactId>maven-gpg-plugin</artifactId>
-                    <version>3.0.1</version>
-                </plugin>
-                <plugin>
-                    <groupId>org.apache.maven.plugins</groupId>
-                    <artifactId>maven-javadoc-plugin</artifactId>
-                    <version>3.4.0</version>
-                </plugin>
-                <plugin>
-                    <groupId>org.apache.maven.plugins</groupId>
-                    <artifactId>maven-install-plugin</artifactId>
-                    <version>2.5.2</version>
-                </plugin>
-                <plugin>
-                    <groupId>org.apache.maven.plugins</groupId>
-                    <artifactId>maven-release-plugin</artifactId>
-                    <version>2.5.3</version>
-                </plugin>
-                <plugin>
-                    <groupId>org.apache.maven.plugins</groupId>
-                    <artifactId>maven-resources-plugin</artifactId>
-                    <version>3.2.0</version>
-                </plugin>
-                <plugin>
-                    <groupId>org.apache.maven.plugins</groupId>
-                    <artifactId>maven-site-plugin</artifactId>
-                    <version>3.12.0</version>
-                </plugin>
-                <plugin>
-                    <groupId>org.apache.maven.plugins</groupId>
-                    <artifactId>maven-source-plugin</artifactId>
-                    <version>3.2.1</version>
-                </plugin>
-                <plugin>
-                    <groupId>org.apache.maven.plugins</groupId>
-                    <artifactId>maven-surefire-plugin</artifactId>
-                    <version>2.22.2</version>
-                </plugin>
-
-                <plugin>
-                    <groupId>org.apache.felix</groupId>
-                    <artifactId>maven-bundle-plugin</artifactId>
-                    <version>5.1.4</version>
-                </plugin>
-                <plugin>
-                    <groupId>org.sonatype.plugins</groupId>
-                    <artifactId>nexus-staging-maven-plugin</artifactId>
-                    <version>1.6.12</version>
-                </plugin>
-            </plugins>
-        </pluginManagement>
@@ -168,0 +88 @@
+                <version>3.1</version>
@@ -174,6 +94,34 @@
-            <!-- Note: we might need this for removing side-effect on InterruptTest -->
-            <!--plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-surefire-plugin</artifactId>
-                <configuration>
-                    <reuseForks>false</reuseForks>
+           <!-- Note: we might need this for removing side-effect on InterruptTest
+           <plugin>
+               <groupId>org.apache.maven.plugins</groupId>
+               <artifactId>maven-surefire-plugin</artifactId>
+               <version>2.18.1</version>
+               <configuration>
+                   <reuseForks>false</reuseForks>
+               </configuration>
+           </plugin>
+           -->
+           <plugin>
+               <groupId>org.apache.felix</groupId>
+               <artifactId>maven-bundle-plugin</artifactId>
+               <version>2.3.7</version>
+               <extensions>true</extensions>
+               <configuration>
+                   <instructions>
+                       <Bundle-Name>NuProcess</Bundle-Name>
+                       <Export-Package>
+							com.zaxxer.nuprocess;version="${project.version}",
+							com.zaxxer.nuprocess.codec;version="${project.version}"
+					   </Export-Package>
+                       <Import-Package>com.sun.*</Import-Package>
+                       <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
+                   </instructions>
+               </configuration>
+           </plugin>
+           <plugin>
+               <groupId>org.apache.maven.plugins</groupId>
+               <artifactId>maven-source-plugin</artifactId>
+               <version>2.2.1</version>
+               <configuration>
+                   <!-- outputDirectory>/absolute/path/to/the/output/directory</outputDirectory> <finalName>filename-of-generated-jar-file</finalName -->
+                    <attach>true</attach>
@@ -181,2 +129,9 @@
-            </plugin-->
-
+                <executions>
+                    <execution>
+                        <id>attach-sources</id>
+                        <goals>
+                            <goal>jar</goal>
+                        </goals>
+                    </execution>
+                </executions>
+            </plugin>
@@ -184,3 +139,3 @@
-                <groupId>org.apache.felix</groupId>
-                <artifactId>maven-bundle-plugin</artifactId>
-                <extensions>true</extensions>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-javadoc-plugin</artifactId>
+                <version>2.10.2</version>
@@ -188,12 +143,6 @@
-                    <instructions>
-                        <Bundle-Name>NuProcess</Bundle-Name>
-                        <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
-                        <Export-Package>
-                            com.zaxxer.nuprocess;version="${project.version}",
-                            com.zaxxer.nuprocess.codec;version="${project.version}"
-                        </Export-Package>
-                        <Import-Package>
-                            com.sun.jna*;version="[5.5,6)"
-                        </Import-Package>
-                        <_noee>true</_noee>
-                    </instructions>
+                    <show>public</show>
+                    <sourceFileExcludes>
+                        <exclude>**/NuProcessFactory.java</exclude>
+                    </sourceFileExcludes>
+                    <excludePackageNames>com.zaxxer.nuprocess.internal,com.zaxxer.nuprocess.linux,com.zaxxer.nuprocess.osx,com.zaxxer.nuprocess.windows</excludePackageNames>
+                    <attach>true</attach>
@@ -200,0 +150,7 @@
+                <executions>
+                    <execution>
+                        <goals>
+                            <goal>jar</goal>
+                        </goals>
+                    </execution>
+                </executions>
@@ -207 +163 @@
-            <id>release</id>
+            <id>release-sign-artifacts</id>
@@ -216,2 +171,0 @@
-                    <!-- For release: mvn release:perform -Darguments=-Dgpg.passphrase=PASSPHRASE
-                         With gpg2 you don't need to pass the passphrase; the GPG agent will prompt for it. -->
@@ -220,0 +175 @@
+                        <version>1.4</version>
@@ -231,31 +185,0 @@
-                    <plugin>
-                        <groupId>org.apache.maven.plugins</groupId>
-                        <artifactId>maven-javadoc-plugin</artifactId>
-                        <configuration>
-                            <attach>true</attach>
-                            <excludePackageNames>
-                                com.zaxxer.nuprocess.internal,
-                                com.zaxxer.nuprocess.linux,
-                                com.zaxxer.nuprocess.osx,
-                                com.zaxxer.nuprocess.windows
-                            </excludePackageNames>
-                            <show>public</show>
-                            <sourceFileExcludes>
-                                <exclude>**/NuProcessFactory.java</exclude>
-                            </sourceFileExcludes>
-                        </configuration>
-                    </plugin>
-
-                    <!-- nexus-staging-maven-plugin replaces the standard maven-deploy-plugin for releases and
-                         is useful for ensuring artifacts are all-or-nothing, as well as allowing artifacts to
-                         be reviewed before they're made public -->
-                    <plugin>
-                        <groupId>org.sonatype.plugins</groupId>
-                        <artifactId>nexus-staging-maven-plugin</artifactId>
-                        <extensions>true</extensions>
-                        <configuration>
-                            <autoReleaseAfterClose>${autoReleaseStagedArtifacts}</autoReleaseAfterClose>
-                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
-                            <serverId>ossrh</serverId>
-                        </configuration>
-                    </plugin>
diff --git a/src/main/java/com/zaxxer/nuprocess/internal/BasePosixProcess.java b/src/main/java/com/zaxxer/nuprocess/internal/BasePosixProcess.java
index 5b8f19d..e2fa76f 100644
--- a/src/main/java/com/zaxxer/nuprocess/internal/BasePosixProcess.java
+++ b/src/main/java/com/zaxxer/nuprocess/internal/BasePosixProcess.java
@@ -356,3 +356,2 @@ public abstract class BasePosixProcess implements NuProcess
-
-            int errno = Native.getLastError();
-            throw new RuntimeException("Unexpected EOF reading stdout, errno: " + errno);
+            throw new RuntimeException("Unexpected eof");
+            // EOF?
@@ -393,0 +393 @@ public abstract class BasePosixProcess implements NuProcess
+            // EOF?
@@ -395,3 +395 @@ public abstract class BasePosixProcess implements NuProcess
-
-            int errno = Native.getLastError();
-            throw new RuntimeException("Unexpected EOF reading stderr, errno: " + errno);
+            throw new RuntimeException("Unexpected eof");
diff --git a/src/main/java/com/zaxxer/nuprocess/linux/LinuxProcess.java b/src/main/java/com/zaxxer/nuprocess/linux/LinuxProcess.java
index d4c6bca..a0ff29f 100644
--- a/src/main/java/com/zaxxer/nuprocess/linux/LinuxProcess.java
+++ b/src/main/java/com/zaxxer/nuprocess/linux/LinuxProcess.java
@@ -38,2 +37,0 @@ public class LinuxProcess extends BasePosixProcess
-   private final EpollEvent epollEvent;
-
@@ -60,2 +57,0 @@ public class LinuxProcess extends BasePosixProcess
-
-      epollEvent = new EpollEvent();
@@ -119,11 +114,0 @@ public class LinuxProcess extends BasePosixProcess
-   /**
-    * An {@link EpollEvent} struct, which may be used when registering for events for this process. Each process has
-    * its own struct to avoid concurrency issues in {@link ProcessEpoll#registerProcess} when multiple processes are
-    * registered at once (e.g. multiple threads are all starting new processes concurrently).
-    *
-    * @return this process's {@link EpollEvent} struct
-    */
-   EpollEvent getEpollEvent() {
-      return epollEvent;
-   }
-
diff --git a/src/main/java/com/zaxxer/nuprocess/linux/ProcessEpoll.java b/src/main/java/com/zaxxer/nuprocess/linux/ProcessEpoll.java
index 54c09fc..ad2067d 100644
--- a/src/main/java/com/zaxxer/nuprocess/linux/ProcessEpoll.java
+++ b/src/main/java/com/zaxxer/nuprocess/linux/ProcessEpoll.java
@@ -21,0 +22,2 @@ import java.util.List;
+import java.util.concurrent.ArrayBlockingQueue;
+import java.util.concurrent.BlockingQueue;
@@ -39,3 +41,2 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
-   private final int epoll;
-   private final EpollEvent triggeredEvent;
-   private final List<LinuxProcess> deadPool;
+   private static final int EVENT_POOL_SIZE = 64;
+   private static final BlockingQueue<EpollEvent> eventPool;
@@ -42,0 +44,3 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
+   private int epoll;
+   private EpollEvent triggeredEvent;
+   private List<LinuxProcess> deadPool;
@@ -44,0 +49,9 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
+   static
+   {
+      eventPool = new ArrayBlockingQueue<>(EVENT_POOL_SIZE);
+      for (int i = 0; i < EVENT_POOL_SIZE; i++) {
+         EpollEvent event = new EpollEvent();
+         eventPool.add(event);
+      }
+   }
+
@@ -66,2 +79 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
-         int errno = Native.getLastError();
-         throw new RuntimeException("Unable to create kqueue, errno: " + errno);
+         throw new RuntimeException("Unable to create kqueue: " + Native.getLastError());
@@ -99,8 +111,11 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
-         EpollEvent event = process.getEpollEvent();
-         event.setEvents(LibEpoll.EPOLLIN);
-         event.setFileDescriptor(stdoutFd);
-         int rc = LibEpoll.epoll_ctl(epoll, LibEpoll.EPOLL_CTL_ADD, stdoutFd, event.getPointer());
-         if (rc == -1) {
-            int errno = Native.getLastError();
-            throw new RuntimeException("Unable to register new events to epoll, errno: " + errno);
-         }
+         try {
+            EpollEvent event = eventPool.take();
+            event.setEvents(LibEpoll.EPOLLIN);
+            event.setFileDescriptor(stdoutFd);
+            int rc = LibEpoll.epoll_ctl(epoll, LibEpoll.EPOLL_CTL_ADD, stdoutFd, event.getPointer());
+            if (rc == -1) {
+               rc = Native.getLastError();
+               eventPool.put(event);
+               throw new RuntimeException("Unable to register new events to epoll, errorcode: " + rc);
+            }
+            eventPool.put(event);
@@ -108,6 +123,13 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
-         event.setEvents(LibEpoll.EPOLLIN);
-         event.setFileDescriptor(stderrFd);
-         rc = LibEpoll.epoll_ctl(epoll, LibEpoll.EPOLL_CTL_ADD, stderrFd, event.getPointer());
-         if (rc == -1) {
-            int errno = Native.getLastError();
-            throw new RuntimeException("Unable to register new events to epoll, errno: " + errno);
+            event = eventPool.take();
+            event.setEvents(LibEpoll.EPOLLIN);
+            event.setFileDescriptor(stderrFd);
+            rc = LibEpoll.epoll_ctl(epoll, LibEpoll.EPOLL_CTL_ADD, stderrFd, event.getPointer());
+            if (rc == -1) {
+               rc = Native.getLastError();
+               eventPool.put(event);
+               throw new RuntimeException("Unable to register new events to epoll, errorcode: " + rc);
+            }
+            eventPool.put(event);
+         }
+         catch (InterruptedException ie) {
+            throw new RuntimeException(ie);
@@ -141,2 +163 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
-
-         EpollEvent event = process.getEpollEvent();
+         EpollEvent event = eventPool.take();
@@ -149,4 +169,0 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
-            if (rc == -1) {
-               int errno = Native.getLastError();
-               throw new RuntimeException("Unable to register new event to epoll queue, errno: " + errno);
-            }
@@ -153,0 +171,8 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
+
+         eventPool.put(event);
+         if (rc == -1) {
+            throw new RuntimeException("Unable to register new event to epoll queue");
+         }
+      }
+      catch (InterruptedException ie) {
+         throw new RuntimeException(ie);
@@ -206 +231 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
-            throw new RuntimeException("Error waiting for epoll, errno: " + errno);
+            throw new RuntimeException("Error waiting for epoll (" + errno + ")");
