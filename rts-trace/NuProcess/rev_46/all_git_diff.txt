diff --git a/mvnvm.properties b/mvnvm.properties
new file mode 100644
index 0000000..557db81
--- /dev/null
+++ b/mvnvm.properties
@@ -0,0 +1 @@
+mvn_version=3.8.5
diff --git a/pom.xml b/pom.xml
index 9f8d77b..3888426 100644
--- a/pom.xml
+++ b/pom.xml
@@ -5,2 +4,0 @@
-    <!-- For release: mvn release:perform -Darguments=-Dgpg.passphrase=PASSPHRASE -->
-
@@ -15 +12,0 @@
-
@@ -20,7 +16,0 @@
-
-    <scm>
-        <connection>scm:git:git@github.com:brettwooldridge/NuProcess.git</connection>
-        <developerConnection>scm:git:git@github.com:brettwooldridge/NuProcess.git</developerConnection>
-        <url>git@github.com:brettwooldridge/NuProcess.git</url>
-    </scm>
-
@@ -48,0 +39,4 @@
+        <developer>
+            <name>Bryan Turner</name>
+            <email>incommand@hotmail.com</email>
+        </developer>
@@ -50,0 +45,12 @@
+    <scm>
+        <connection>scm:git:git@github.com:brettwooldridge/NuProcess.git</connection>
+        <developerConnection>scm:git:git@github.com:brettwooldridge/NuProcess.git</developerConnection>
+        <url>git@github.com:brettwooldridge/NuProcess.git</url>
+    </scm>
+    <distributionManagement>
+        <snapshotRepository>
+            <id>ossrh</id>
+            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
+        </snapshotRepository>
+    </distributionManagement>
+
@@ -53 +58,0 @@
-    </properties>
@@ -55,5 +60,5 @@
-    <parent>
-        <groupId>org.sonatype.oss</groupId>
-        <artifactId>oss-parent</artifactId>
-        <version>7</version>
-    </parent>
+        <!-- When releasing a new version, this property controls whether the staged artifacts will be automatically
+             released in Nexus. If this is set to false (-DautoReleaseStagedArtifacts=false), artifacts will need to
+             be manually released via the Nexus UI at https://oss.sonatype.org -->
+        <autoReleaseStagedArtifacts>true</autoReleaseStagedArtifacts>
+    </properties>
@@ -65 +70 @@
-            <version>5.8.0</version>
+            <version>5.11.0</version>
@@ -66,0 +72 @@
+
@@ -75,2 +81,2 @@
-            <artifactId>hamcrest-junit</artifactId>
-            <version>2.0.0.0</version>
+            <artifactId>hamcrest</artifactId>
+            <version>2.2</version>
@@ -83,0 +90,75 @@
+        <pluginManagement>
+            <plugins>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-clean-plugin</artifactId>
+                    <version>3.2.0</version>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-compiler-plugin</artifactId>
+                    <version>3.10.1</version>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-deploy-plugin</artifactId>
+                    <version>2.8.2</version>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-enforcer-plugin</artifactId>
+                    <version>3.0.0</version>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-gpg-plugin</artifactId>
+                    <version>3.0.1</version>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-javadoc-plugin</artifactId>
+                    <version>3.4.0</version>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-install-plugin</artifactId>
+                    <version>2.5.2</version>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-release-plugin</artifactId>
+                    <version>2.5.3</version>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-resources-plugin</artifactId>
+                    <version>3.2.0</version>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-site-plugin</artifactId>
+                    <version>3.12.0</version>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-source-plugin</artifactId>
+                    <version>3.2.1</version>
+                </plugin>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-surefire-plugin</artifactId>
+                    <version>2.22.2</version>
+                </plugin>
+
+                <plugin>
+                    <groupId>org.apache.felix</groupId>
+                    <artifactId>maven-bundle-plugin</artifactId>
+                    <version>5.1.4</version>
+                </plugin>
+                <plugin>
+                    <groupId>org.sonatype.plugins</groupId>
+                    <artifactId>nexus-staging-maven-plugin</artifactId>
+                    <version>1.6.12</version>
+                </plugin>
+            </plugins>
+        </pluginManagement>
@@ -88 +168,0 @@
-                <version>3.1</version>
@@ -94,34 +174,6 @@
-           <!-- Note: we might need this for removing side-effect on InterruptTest
-           <plugin>
-               <groupId>org.apache.maven.plugins</groupId>
-               <artifactId>maven-surefire-plugin</artifactId>
-               <version>2.18.1</version>
-               <configuration>
-                   <reuseForks>false</reuseForks>
-               </configuration>
-           </plugin>
-           -->
-           <plugin>
-               <groupId>org.apache.felix</groupId>
-               <artifactId>maven-bundle-plugin</artifactId>
-               <version>2.3.7</version>
-               <extensions>true</extensions>
-               <configuration>
-                   <instructions>
-                       <Bundle-Name>NuProcess</Bundle-Name>
-                       <Export-Package>
-							com.zaxxer.nuprocess;version="${project.version}",
-							com.zaxxer.nuprocess.codec;version="${project.version}"
-					   </Export-Package>
-                       <Import-Package>com.sun.*</Import-Package>
-                       <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
-                   </instructions>
-               </configuration>
-           </plugin>
-           <plugin>
-               <groupId>org.apache.maven.plugins</groupId>
-               <artifactId>maven-source-plugin</artifactId>
-               <version>2.2.1</version>
-               <configuration>
-                   <!-- outputDirectory>/absolute/path/to/the/output/directory</outputDirectory> <finalName>filename-of-generated-jar-file</finalName -->
-                    <attach>true</attach>
+            <!-- Note: we might need this for removing side-effect on InterruptTest -->
+            <!--plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <configuration>
+                    <reuseForks>false</reuseForks>
@@ -129,9 +181,2 @@
-                <executions>
-                    <execution>
-                        <id>attach-sources</id>
-                        <goals>
-                            <goal>jar</goal>
-                        </goals>
-                    </execution>
-                </executions>
-            </plugin>
+            </plugin-->
+
@@ -139,3 +184,3 @@
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-javadoc-plugin</artifactId>
-                <version>2.10.2</version>
+                <groupId>org.apache.felix</groupId>
+                <artifactId>maven-bundle-plugin</artifactId>
+                <extensions>true</extensions>
@@ -143,6 +188,12 @@
-                    <show>public</show>
-                    <sourceFileExcludes>
-                        <exclude>**/NuProcessFactory.java</exclude>
-                    </sourceFileExcludes>
-                    <excludePackageNames>com.zaxxer.nuprocess.internal,com.zaxxer.nuprocess.linux,com.zaxxer.nuprocess.osx,com.zaxxer.nuprocess.windows</excludePackageNames>
-                    <attach>true</attach>
+                    <instructions>
+                        <Bundle-Name>NuProcess</Bundle-Name>
+                        <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
+                        <Export-Package>
+                            com.zaxxer.nuprocess;version="${project.version}",
+                            com.zaxxer.nuprocess.codec;version="${project.version}"
+                        </Export-Package>
+                        <Import-Package>
+                            com.sun.jna*;version="[5.5,6)"
+                        </Import-Package>
+                        <_noee>true</_noee>
+                    </instructions>
@@ -150,7 +200,0 @@
-                <executions>
-                    <execution>
-                        <goals>
-                            <goal>jar</goal>
-                        </goals>
-                    </execution>
-                </executions>
@@ -163 +207 @@
-            <id>release-sign-artifacts</id>
+            <id>release</id>
@@ -171,0 +216,2 @@
+                    <!-- For release: mvn release:perform -Darguments=-Dgpg.passphrase=PASSPHRASE
+                         With gpg2 you don't need to pass the passphrase; the GPG agent will prompt for it. -->
@@ -175 +220,0 @@
-                        <version>1.4</version>
@@ -185,0 +231,31 @@
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-javadoc-plugin</artifactId>
+                        <configuration>
+                            <attach>true</attach>
+                            <excludePackageNames>
+                                com.zaxxer.nuprocess.internal,
+                                com.zaxxer.nuprocess.linux,
+                                com.zaxxer.nuprocess.osx,
+                                com.zaxxer.nuprocess.windows
+                            </excludePackageNames>
+                            <show>public</show>
+                            <sourceFileExcludes>
+                                <exclude>**/NuProcessFactory.java</exclude>
+                            </sourceFileExcludes>
+                        </configuration>
+                    </plugin>
+
+                    <!-- nexus-staging-maven-plugin replaces the standard maven-deploy-plugin for releases and
+                         is useful for ensuring artifacts are all-or-nothing, as well as allowing artifacts to
+                         be reviewed before they're made public -->
+                    <plugin>
+                        <groupId>org.sonatype.plugins</groupId>
+                        <artifactId>nexus-staging-maven-plugin</artifactId>
+                        <extensions>true</extensions>
+                        <configuration>
+                            <autoReleaseAfterClose>${autoReleaseStagedArtifacts}</autoReleaseAfterClose>
+                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
+                            <serverId>ossrh</serverId>
+                        </configuration>
+                    </plugin>
diff --git a/src/main/java/com/zaxxer/nuprocess/internal/BasePosixProcess.java b/src/main/java/com/zaxxer/nuprocess/internal/BasePosixProcess.java
index e2fa76f..5b8f19d 100644
--- a/src/main/java/com/zaxxer/nuprocess/internal/BasePosixProcess.java
+++ b/src/main/java/com/zaxxer/nuprocess/internal/BasePosixProcess.java
@@ -356,2 +356,3 @@ public abstract class BasePosixProcess implements NuProcess
-            throw new RuntimeException("Unexpected eof");
-            // EOF?
+
+            int errno = Native.getLastError();
+            throw new RuntimeException("Unexpected EOF reading stdout, errno: " + errno);
@@ -393 +393,0 @@ public abstract class BasePosixProcess implements NuProcess
-            // EOF?
@@ -395 +395,3 @@ public abstract class BasePosixProcess implements NuProcess
-            throw new RuntimeException("Unexpected eof");
+
+            int errno = Native.getLastError();
+            throw new RuntimeException("Unexpected EOF reading stderr, errno: " + errno);
diff --git a/src/main/java/com/zaxxer/nuprocess/linux/LinuxProcess.java b/src/main/java/com/zaxxer/nuprocess/linux/LinuxProcess.java
index a0ff29f..d4c6bca 100644
--- a/src/main/java/com/zaxxer/nuprocess/linux/LinuxProcess.java
+++ b/src/main/java/com/zaxxer/nuprocess/linux/LinuxProcess.java
@@ -37,0 +38,2 @@ public class LinuxProcess extends BasePosixProcess
+   private final EpollEvent epollEvent;
+
@@ -57,0 +60,2 @@ public class LinuxProcess extends BasePosixProcess
+
+      epollEvent = new EpollEvent();
@@ -114,0 +119,11 @@ public class LinuxProcess extends BasePosixProcess
+   /**
+    * An {@link EpollEvent} struct, which may be used when registering for events for this process. Each process has
+    * its own struct to avoid concurrency issues in {@link ProcessEpoll#registerProcess} when multiple processes are
+    * registered at once (e.g. multiple threads are all starting new processes concurrently).
+    *
+    * @return this process's {@link EpollEvent} struct
+    */
+   EpollEvent getEpollEvent() {
+      return epollEvent;
+   }
+
diff --git a/src/main/java/com/zaxxer/nuprocess/linux/ProcessEpoll.java b/src/main/java/com/zaxxer/nuprocess/linux/ProcessEpoll.java
index ad2067d..54c09fc 100644
--- a/src/main/java/com/zaxxer/nuprocess/linux/ProcessEpoll.java
+++ b/src/main/java/com/zaxxer/nuprocess/linux/ProcessEpoll.java
@@ -22,2 +21,0 @@ import java.util.List;
-import java.util.concurrent.ArrayBlockingQueue;
-import java.util.concurrent.BlockingQueue;
@@ -41,2 +39,3 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
-   private static final int EVENT_POOL_SIZE = 64;
-   private static final BlockingQueue<EpollEvent> eventPool;
+   private final int epoll;
+   private final EpollEvent triggeredEvent;
+   private final List<LinuxProcess> deadPool;
@@ -44,3 +42,0 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
-   private int epoll;
-   private EpollEvent triggeredEvent;
-   private List<LinuxProcess> deadPool;
@@ -49,9 +44,0 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
-   static
-   {
-      eventPool = new ArrayBlockingQueue<>(EVENT_POOL_SIZE);
-      for (int i = 0; i < EVENT_POOL_SIZE; i++) {
-         EpollEvent event = new EpollEvent();
-         eventPool.add(event);
-      }
-   }
-
@@ -79 +66,2 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
-         throw new RuntimeException("Unable to create kqueue: " + Native.getLastError());
+         int errno = Native.getLastError();
+         throw new RuntimeException("Unable to create kqueue, errno: " + errno);
@@ -111,22 +99,7 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
-         try {
-            EpollEvent event = eventPool.take();
-            event.setEvents(LibEpoll.EPOLLIN);
-            event.setFileDescriptor(stdoutFd);
-            int rc = LibEpoll.epoll_ctl(epoll, LibEpoll.EPOLL_CTL_ADD, stdoutFd, event.getPointer());
-            if (rc == -1) {
-               rc = Native.getLastError();
-               eventPool.put(event);
-               throw new RuntimeException("Unable to register new events to epoll, errorcode: " + rc);
-            }
-            eventPool.put(event);
-
-            event = eventPool.take();
-            event.setEvents(LibEpoll.EPOLLIN);
-            event.setFileDescriptor(stderrFd);
-            rc = LibEpoll.epoll_ctl(epoll, LibEpoll.EPOLL_CTL_ADD, stderrFd, event.getPointer());
-            if (rc == -1) {
-               rc = Native.getLastError();
-               eventPool.put(event);
-               throw new RuntimeException("Unable to register new events to epoll, errorcode: " + rc);
-            }
-            eventPool.put(event);
+         EpollEvent event = process.getEpollEvent();
+         event.setEvents(LibEpoll.EPOLLIN);
+         event.setFileDescriptor(stdoutFd);
+         int rc = LibEpoll.epoll_ctl(epoll, LibEpoll.EPOLL_CTL_ADD, stdoutFd, event.getPointer());
+         if (rc == -1) {
+            int errno = Native.getLastError();
+            throw new RuntimeException("Unable to register new events to epoll, errno: " + errno);
@@ -134,2 +107,7 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
-         catch (InterruptedException ie) {
-            throw new RuntimeException(ie);
+
+         event.setEvents(LibEpoll.EPOLLIN);
+         event.setFileDescriptor(stderrFd);
+         rc = LibEpoll.epoll_ctl(epoll, LibEpoll.EPOLL_CTL_ADD, stderrFd, event.getPointer());
+         if (rc == -1) {
+            int errno = Native.getLastError();
+            throw new RuntimeException("Unable to register new events to epoll, errno: " + errno);
@@ -163 +141,2 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
-         EpollEvent event = eventPool.take();
+
+         EpollEvent event = process.getEpollEvent();
@@ -169,0 +149,4 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
+            if (rc == -1) {
+               int errno = Native.getLastError();
+               throw new RuntimeException("Unable to register new event to epoll queue, errno: " + errno);
+            }
@@ -171,8 +153,0 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
-
-         eventPool.put(event);
-         if (rc == -1) {
-            throw new RuntimeException("Unable to register new event to epoll queue");
-         }
-      }
-      catch (InterruptedException ie) {
-         throw new RuntimeException(ie);
@@ -231 +206 @@ class ProcessEpoll extends BaseEventProcessor<LinuxProcess>
-            throw new RuntimeException("Error waiting for epoll (" + errno + ")");
+            throw new RuntimeException("Error waiting for epoll, errno: " + errno);
