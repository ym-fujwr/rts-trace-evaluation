diff --git a/src/changes/changes.xml b/src/changes/changes.xml
index 703e4ec3..9127e5db 100644
--- a/src/changes/changes.xml
+++ b/src/changes/changes.xml
@@ -57,0 +58,3 @@
+      <action dev="ggregory" type="fix" due-to="Gary Gregory" issue="CLI-283">
+        CommandLine.addArgs(String) should not allow a null String.
+      </action>
diff --git a/src/main/java/org/apache/commons/cli/CommandLine.java b/src/main/java/org/apache/commons/cli/CommandLine.java
index 22940a79..0d0b9f5f 100644
--- a/src/main/java/org/apache/commons/cli/CommandLine.java
+++ b/src/main/java/org/apache/commons/cli/CommandLine.java
@@ -102 +102,3 @@ public class CommandLine implements Serializable {
-        args.add(arg);
+        if (arg != null) {
+            args.add(arg);
+        }
diff --git a/src/test/java/org/apache/commons/cli/CommandLineTest.java b/src/test/java/org/apache/commons/cli/CommandLineTest.java
index 812c65e8..4522fb03 100644
--- a/src/test/java/org/apache/commons/cli/CommandLineTest.java
+++ b/src/test/java/org/apache/commons/cli/CommandLineTest.java
@@ -44 +44,12 @@ public class CommandLineTest {
-    public void testBuilderNulls() {
+    public void testBuilderNullArgs() {
+        final CommandLine.Builder builder = new CommandLine.Builder();
+        builder.addArg(null).addArg(null);
+        builder.addOption(Option.builder("T").build());
+        final CommandLine cmd = builder.build();
+
+        assertEquals(0, cmd.getArgs().length);
+        assertEquals("T", cmd.getOptions()[0].getOpt());
+    }
+
+    @Test
+    public void testBuilderNullOption() {
@@ -47,0 +59,2 @@ public class CommandLineTest {
+        builder.addOption(null);
+        builder.addOption(null);
