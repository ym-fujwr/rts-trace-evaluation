package
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
beans
;
import
org
.
apache
.
commons
.
jxpath
.
JXPathContext
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
QName
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
NodePointer
;
public
class
NullElementPointer
extends
CollectionPointer
{
private
static
final
long
serialVersionUID
=
8714236818791036721L
;
public
NullElementPointer
(
final
NodePointer
parent
,
final
int
index
)
{
super
(
parent
,
(
Object
)
null
)
;
this
.
index
=
index
;
}
@
Override
public
QName
getName
(
)
{
return
null
;
}
@
Override
public
Object
getBaseValue
(
)
{
return
null
;
}
@
Override
public
Object
getImmediateNode
(
)
{
return
null
;
}
@
Override
public
boolean
isLeaf
(
)
{
return
true
;
}
@
Override
public
boolean
isCollection
(
)
{
return
false
;
}
public
PropertyPointer
getPropertyPointer
(
)
{
return
new
NullPropertyPointer
(
this
)
;
}
@
Override
public
NodePointer
getValuePointer
(
)
{
return
new
NullPointer
(
this
,
getName
(
)
)
;
}
@
Override
public
void
setValue
(
final
Object
value
)
{
throw
new
UnsupportedOperationException
(
"Collection element does not exist: "
+
this
)
;
}
@
Override
public
boolean
isActual
(
)
{
return
false
;
}
@
Override
public
boolean
isContainer
(
)
{
return
true
;
}
@
Override
public
NodePointer
createPath
(
final
JXPathContext
context
)
{
return
parent
.
createChild
(
context
,
null
,
index
)
;
}
@
Override
public
NodePointer
createPath
(
final
JXPathContext
context
,
final
Object
value
)
{
return
parent
.
createChild
(
context
,
null
,
index
,
value
)
;
}
@
Override
public
int
hashCode
(
)
{
return
getImmediateParentPointer
(
)
.
hashCode
(
)
+
index
;
}
@
Override
public
boolean
equals
(
final
Object
object
)
{
if
(
object
==
this
)
{
return
true
;
}
if
(
!
(
object
instanceof
NullElementPointer
)
)
{
return
false
;
}
final
NullElementPointer
other
=
(
NullElementPointer
)
object
;
return
getImmediateParentPointer
(
)
==
other
.
getImmediateParentPointer
(
)
&&
index
==
other
.
index
;
}
@
Override
public
int
getLength
(
)
{
return
0
;
}
@
Override
public
String
asPath
(
)
{
final
StringBuffer
buffer
=
new
StringBuffer
(
)
;
final
NodePointer
parent
=
getImmediateParentPointer
(
)
;
if
(
parent
!=
null
)
{
buffer
.
append
(
parent
.
asPath
(
)
)
;
}
if
(
index
!=
WHOLE_COLLECTION
)
{
if
(
parent
!=
null
&&
parent
.
getIndex
(
)
!=
WHOLE_COLLECTION
)
{
buffer
.
append
(
"/."
)
;
}
else
if
(
parent
!=
null
&&
parent
.
getImmediateParentPointer
(
)
!=
null
&&
parent
.
getImmediateParentPointer
(
)
.
getIndex
(
)
!=
WHOLE_COLLECTION
)
{
buffer
.
append
(
"/."
)
;
}
buffer
.
append
(
"["
)
.
append
(
index
+
1
)
.
append
(
']'
)
;
}
return
buffer
.
toString
(
)
;
}
}
<EOF>
