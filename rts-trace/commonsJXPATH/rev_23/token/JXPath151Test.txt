package
org
.
apache
.
commons
.
jxpath
.
ri
.
model
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
Locale
;
import
org
.
apache
.
commons
.
jxpath
.
JXPathContext
;
import
org
.
apache
.
commons
.
jxpath
.
JXPathTestCase
;
import
org
.
apache
.
commons
.
jxpath
.
TestBean
;
public
class
JXPath151Test
extends
JXPathTestCase
{
private
JXPathContext
context
;
public
void
setUp
(
)
{
TestBean
testBean
=
new
TestBean
(
)
;
HashMap
m
=
new
HashMap
(
)
;
m
.
put
(
"a"
,
Integer
.
valueOf
(
1
)
)
;
m
.
put
(
"b"
,
null
)
;
m
.
put
(
"c"
,
Integer
.
valueOf
(
1
)
)
;
m
.
put
(
"d"
,
Integer
.
valueOf
(
0
)
)
;
testBean
.
setMap
(
m
)
;
context
=
JXPathContext
.
newContext
(
testBean
)
;
context
.
setLocale
(
Locale
.
US
)
;
}
public
void
testMapValueEquality
(
)
{
assertXPathValue
(
context
,
"map/b != map/a"
,
Boolean
.
TRUE
)
;
assertXPathValue
(
context
,
"map/a != map/b"
,
Boolean
.
TRUE
)
;
assertXPathValue
(
context
,
"map/a != map/c"
,
Boolean
.
FALSE
)
;
assertXPathValue
(
context
,
"map/a = map/b"
,
Boolean
.
FALSE
)
;
assertXPathValue
(
context
,
"map/a = map/c"
,
Boolean
.
TRUE
)
;
assertXPathValue
(
context
,
"not(map/a = map/b)"
,
Boolean
.
TRUE
)
;
assertXPathValue
(
context
,
"not(map/a = map/c)"
,
Boolean
.
FALSE
)
;
}
public
void
testMapValueEqualityUsingNameAttribute
(
)
{
assertXPathValue
(
context
,
"map[@name = 'b'] != map[@name = 'c']"
,
Boolean
.
TRUE
)
;
assertXPathValue
(
context
,
"map[@name = 'a'] != map[@name = 'b']"
,
Boolean
.
TRUE
)
;
assertXPathValue
(
context
,
"map[@name = 'a'] != map[@name = 'c']"
,
Boolean
.
FALSE
)
;
assertXPathValue
(
context
,
"map[@name = 'a'] = map[@name = 'b']"
,
Boolean
.
FALSE
)
;
assertXPathValue
(
context
,
"map[@name = 'a'] = map[@name = 'c']"
,
Boolean
.
TRUE
)
;
assertXPathValue
(
context
,
"map[@name = 'd'] = map[@name = 'b']"
,
Boolean
.
TRUE
)
;
assertXPathValue
(
context
,
"map[@name = 'd'] = map[@name = 'b']"
,
Boolean
.
TRUE
)
;
assertXPathValue
(
context
,
"not(map[@name = 'a'] = map[@name = 'b'])"
,
Boolean
.
TRUE
)
;
assertXPathValue
(
context
,
"not(map[@name = 'a'] = map[@name = 'c'])"
,
Boolean
.
FALSE
)
;
}
}
<EOF>
