package
org
.
apache
.
commons
.
jxpath
;
import
java
.
net
.
URL
;
import
javax
.
xml
.
transform
.
Source
;
import
javax
.
xml
.
transform
.
Transformer
;
import
javax
.
xml
.
transform
.
TransformerFactory
;
import
javax
.
xml
.
transform
.
dom
.
DOMResult
;
import
org
.
apache
.
commons
.
jxpath
.
xml
.
DocumentContainer
;
@
Deprecated
public
class
XMLDocumentContainer
implements
Container
{
private
static
final
long
serialVersionUID
=
1L
;
private
DocumentContainer
delegate
;
private
Object
document
;
private
URL
xmlURL
;
private
Source
source
;
public
XMLDocumentContainer
(
final
URL
xmlURL
)
{
this
.
xmlURL
=
xmlURL
;
delegate
=
new
DocumentContainer
(
xmlURL
)
;
}
public
XMLDocumentContainer
(
final
Source
source
)
{
this
.
source
=
source
;
if
(
source
==
null
)
{
throw
new
RuntimeException
(
"Source is null"
)
;
}
}
@
Override
public
Object
getValue
(
)
{
if
(
document
==
null
)
{
try
{
if
(
source
!=
null
)
{
final
DOMResult
result
=
new
DOMResult
(
)
;
final
Transformer
trans
=
TransformerFactory
.
newInstance
(
)
.
newTransformer
(
)
;
trans
.
transform
(
source
,
result
)
;
document
=
result
.
getNode
(
)
;
}
else
{
document
=
delegate
.
getValue
(
)
;
}
}
catch
(
final
Exception
ex
)
{
throw
new
JXPathException
(
"Cannot read XML from: "
+
(
xmlURL
!=
null
?
xmlURL
.
toString
(
)
:
source
!=
null
?
source
.
getSystemId
(
)
:
"<<undefined source>>"
)
,
ex
)
;
}
}
return
document
;
}
@
Override
public
void
setValue
(
final
Object
value
)
{
throw
new
UnsupportedOperationException
(
)
;
}
}
<EOF>
