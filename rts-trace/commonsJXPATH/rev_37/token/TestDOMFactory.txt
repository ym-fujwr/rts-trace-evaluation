package
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
dom
;
import
org
.
apache
.
commons
.
jxpath
.
AbstractFactory
;
import
org
.
apache
.
commons
.
jxpath
.
JXPathContext
;
import
org
.
apache
.
commons
.
jxpath
.
Pointer
;
import
org
.
w3c
.
dom
.
Document
;
import
org
.
w3c
.
dom
.
Node
;
public
class
TestDOMFactory
extends
AbstractFactory
{
public
boolean
createObject
(
JXPathContext
context
,
Pointer
pointer
,
Object
parent
,
String
name
,
int
index
)
{
if
(
name
.
equals
(
"location"
)
||
name
.
equals
(
"address"
)
||
name
.
equals
(
"street"
)
)
{
addDOMElement
(
(
Node
)
parent
,
index
,
name
,
null
)
;
return
true
;
}
if
(
name
.
startsWith
(
"price:"
)
)
{
String
namespaceURI
=
context
.
getNamespaceURI
(
"price"
)
;
addDOMElement
(
(
Node
)
parent
,
index
,
name
,
namespaceURI
)
;
return
true
;
}
return
false
;
}
private
void
addDOMElement
(
Node
parent
,
int
index
,
String
tag
,
String
namespaceURI
)
{
Node
child
=
parent
.
getFirstChild
(
)
;
int
count
=
0
;
while
(
child
!=
null
)
{
if
(
child
.
getNodeName
(
)
.
equals
(
tag
)
)
{
count
++
;
}
child
=
child
.
getNextSibling
(
)
;
}
while
(
count
<=
index
)
{
Document
doc
=
parent
.
getOwnerDocument
(
)
;
Node
newElement
;
if
(
namespaceURI
==
null
)
{
newElement
=
doc
.
createElement
(
tag
)
;
}
else
{
newElement
=
doc
.
createElementNS
(
namespaceURI
,
tag
)
;
}
parent
.
appendChild
(
newElement
)
;
count
++
;
}
}
public
boolean
declareVariable
(
JXPathContext
context
,
String
name
)
{
return
false
;
}
}
<EOF>
