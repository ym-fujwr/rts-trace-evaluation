package
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
beans
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
Map
;
import
org
.
apache
.
commons
.
jxpath
.
AbstractFactory
;
import
org
.
apache
.
commons
.
jxpath
.
JXPathAbstractFactoryException
;
import
org
.
apache
.
commons
.
jxpath
.
JXPathContext
;
import
org
.
apache
.
commons
.
jxpath
.
JXPathException
;
import
org
.
apache
.
commons
.
jxpath
.
Pointer
;
import
junit
.
framework
.
TestCase
;
public
class
BadlyImplementedFactoryTest
extends
TestCase
{
private
JXPathContext
context
;
@
Override
public
void
setUp
(
)
{
context
=
JXPathContext
.
newContext
(
new
HashMap
(
)
)
;
context
.
setFactory
(
new
AbstractFactory
(
)
{
@
Override
public
boolean
createObject
(
final
JXPathContext
context
,
final
Pointer
pointer
,
final
Object
parent
,
final
String
name
,
final
int
index
)
{
(
(
Map
)
parent
)
.
put
(
name
,
null
)
;
return
true
;
}
}
)
;
}
public
void
testBadFactoryImplementation
(
)
{
try
{
context
.
createPath
(
"foo/bar"
)
;
fail
(
"should fail with JXPathException caused by JXPathAbstractFactoryException"
)
;
}
catch
(
final
JXPathException
e
)
{
assertTrue
(
e
.
getCause
(
)
instanceof
JXPathAbstractFactoryException
)
;
}
}
}
<EOF>
