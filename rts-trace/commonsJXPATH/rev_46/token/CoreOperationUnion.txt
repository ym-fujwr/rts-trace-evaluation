package
org
.
apache
.
commons
.
jxpath
.
ri
.
compiler
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
EvalContext
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
axes
.
UnionContext
;
public
class
CoreOperationUnion
extends
CoreOperation
{
public
CoreOperationUnion
(
final
Expression
[
]
args
)
{
super
(
args
)
;
}
@
Override
public
Object
computeValue
(
final
EvalContext
context
)
{
final
EvalContext
[
]
argCtxs
=
new
EvalContext
[
args
.
length
]
;
for
(
int
i
=
0
;
i
<
args
.
length
;
i
++
)
{
final
Object
value
=
args
[
i
]
.
compute
(
context
)
;
if
(
value
instanceof
EvalContext
)
{
argCtxs
[
i
]
=
(
EvalContext
)
value
;
}
else
{
argCtxs
[
i
]
=
context
.
getRootContext
(
)
.
getConstantContext
(
value
)
;
}
}
return
new
UnionContext
(
context
.
getRootContext
(
)
,
argCtxs
)
;
}
@
Override
protected
int
getPrecedence
(
)
{
return
UNION_PRECEDENCE
;
}
@
Override
protected
boolean
isSymmetric
(
)
{
return
true
;
}
@
Override
public
String
getSymbol
(
)
{
return
"|"
;
}
}
<EOF>
