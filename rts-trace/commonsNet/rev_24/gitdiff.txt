diff --git a/src/main/java/org/apache/commons/net/util/SubnetUtils.java b/src/main/java/org/apache/commons/net/util/SubnetUtils.java
index 96bcc19a8..5f84bf44d 100644
--- a/src/main/java/org/apache/commons/net/util/SubnetUtils.java
+++ b/src/main/java/org/apache/commons/net/util/SubnetUtils.java
@@ -23 +23 @@ import java.util.regex.Pattern;
- * Performs some subnet calculations given a network address and a subnet mask.
+ * A class that performs some subnet calculations given a network address and a subnet mask.
@@ -34 +33,0 @@ public class SubnetUtils {
-
@@ -46 +45 @@ public class SubnetUtils {
-        * Converts a 4-element array into dotted decimal format
+        * Convert a 4-element array into dotted decimal format
@@ -65 +64 @@ public class SubnetUtils {
-         * Gets the count of available addresses.
+         * Get the count of available addresses.
@@ -82 +81 @@ public class SubnetUtils {
-         * Gets the count of available addresses.
+         * Get the count of available addresses.
@@ -115 +114 @@ public class SubnetUtils {
-         * Gets the high address as a dotted IP address.
+         * Return the high address as a dotted IP address.
@@ -125 +124 @@ public class SubnetUtils {
-         * Gets the low address as a dotted IP address.
+         * Return the low address as a dotted IP address.
@@ -156 +155 @@ public class SubnetUtils {
-         * Tests if the parameter <code>address</code> is in the
+         * Returns true if the parameter <code>address</code> is in the
@@ -175 +174 @@ public class SubnetUtils {
-         * Tests if the parameter <code>address</code> is in the
+         * Returns true if the parameter <code>address</code> is in the
@@ -194,2 +193,2 @@ public class SubnetUtils {
-       /**
-        * Converts a packed integer address into a 4-element array
+        /*
+        * Convert a packed integer address into a 4-element array
@@ -232 +230,0 @@ public class SubnetUtils {
-
@@ -234 +232 @@ public class SubnetUtils {
-     * Extracts the components of a dotted decimal address and
+     * Convenience method to extract the components of a dotted decimal address and
@@ -246 +244 @@ public class SubnetUtils {
-     * Checks integer boundaries.
+     * Convenience function to check integer boundaries.
@@ -259 +257 @@ public class SubnetUtils {
-     * Converts a dotted decimal format address to a packed integer format
+     * Convert a dotted decimal format address to a packed integer format
@@ -281 +279 @@ public class SubnetUtils {
-     * Constructs an instance from a CIDR-notation string, e.g. "192.168.0.1/16"
+     * Constructor that takes a CIDR-notation string, e.g. "192.168.0.1/16"
@@ -316 +314 @@ public class SubnetUtils {
-     * Constructs an instance from a dotted decimal address and a dotted decimal mask.
+     * Constructor that takes a dotted decimal address and a dotted decimal mask.
@@ -338 +336 @@ public class SubnetUtils {
-     * Gets a {@link SubnetInfo} instance that contains subnet-specific statistics
+     * Return a {@link SubnetInfo} instance that contains subnet-specific statistics
@@ -352 +350 @@ public class SubnetUtils {
-     * Tests if the return value of {@link SubnetInfo#getAddressCount()}
+     * Returns <code>true</code> if the return value of {@link SubnetInfo#getAddressCount()}
@@ -362 +360 @@ public class SubnetUtils {
-     * Counts the number of 1-bits in a 32-bit integer using a divide-and-conquer strategy
+     * Count the number of 1-bits in a 32-bit integer using a divide-and-conquer strategy
@@ -375 +373 @@ public class SubnetUtils {
-     * Sets to <code>true</code> if you want the return value of {@link SubnetInfo#getAddressCount()}
+     * Set to <code>true</code> if you want the return value of {@link SubnetInfo#getAddressCount()}
