package
org
.
apache
.
commons
.
net
.
examples
.
unix
;
import
java
.
io
.
IOException
;
import
java
.
net
.
InetAddress
;
import
java
.
net
.
UnknownHostException
;
import
org
.
apache
.
commons
.
net
.
finger
.
FingerClient
;
public
final
class
finger
{
public
static
void
main
(
final
String
[
]
args
)
{
boolean
longOutput
=
false
;
int
arg
=
0
,
index
;
String
handle
,
host
;
final
FingerClient
finger
;
InetAddress
address
=
null
;
while
(
arg
<
args
.
length
&&
args
[
arg
]
.
startsWith
(
"-"
)
)
{
if
(
args
[
arg
]
.
equals
(
"-l"
)
)
{
longOutput
=
true
;
}
else
{
System
.
err
.
println
(
"usage: finger [-l] [[[handle][@<server>]] ...]"
)
;
System
.
exit
(
1
)
;
}
++
arg
;
}
finger
=
new
FingerClient
(
)
;
finger
.
setDefaultTimeout
(
60000
)
;
if
(
arg
>=
args
.
length
)
{
try
{
address
=
InetAddress
.
getLocalHost
(
)
;
}
catch
(
final
UnknownHostException
e
)
{
System
.
err
.
println
(
"Error unknown host: "
+
e
.
getMessage
(
)
)
;
System
.
exit
(
1
)
;
}
try
{
finger
.
connect
(
address
)
;
System
.
out
.
print
(
finger
.
query
(
longOutput
)
)
;
finger
.
disconnect
(
)
;
}
catch
(
final
IOException
e
)
{
System
.
err
.
println
(
"Error I/O exception: "
+
e
.
getMessage
(
)
)
;
System
.
exit
(
1
)
;
}
return
;
}
while
(
arg
<
args
.
length
)
{
index
=
args
[
arg
]
.
lastIndexOf
(
'@'
)
;
if
(
index
==
-
1
)
{
handle
=
args
[
arg
]
;
try
{
address
=
InetAddress
.
getLocalHost
(
)
;
}
catch
(
final
UnknownHostException
e
)
{
System
.
err
.
println
(
"Error unknown host: "
+
e
.
getMessage
(
)
)
;
System
.
exit
(
1
)
;
}
}
else
{
handle
=
args
[
arg
]
.
substring
(
0
,
index
)
;
host
=
args
[
arg
]
.
substring
(
index
+
1
)
;
try
{
address
=
InetAddress
.
getByName
(
host
)
;
System
.
out
.
println
(
"["
+
address
.
getHostName
(
)
+
"]"
)
;
}
catch
(
final
UnknownHostException
e
)
{
System
.
err
.
println
(
"Error unknown host: "
+
e
.
getMessage
(
)
)
;
System
.
exit
(
1
)
;
}
}
try
{
finger
.
connect
(
address
)
;
System
.
out
.
print
(
finger
.
query
(
longOutput
,
handle
)
)
;
finger
.
disconnect
(
)
;
}
catch
(
final
IOException
e
)
{
System
.
err
.
println
(
"Error I/O exception: "
+
e
.
getMessage
(
)
)
;
System
.
exit
(
1
)
;
}
++
arg
;
if
(
arg
!=
args
.
length
)
{
System
.
out
.
print
(
"\n"
)
;
}
}
}
}
<EOF>
