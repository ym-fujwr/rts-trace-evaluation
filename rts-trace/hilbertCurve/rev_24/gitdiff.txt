diff --git a/src/main/java/org/davidmoten/hilbert/Ranges2.java b/src/main/java/org/davidmoten/hilbert/Ranges2.java
index cf981a8..87d0fe3 100644
--- a/src/main/java/org/davidmoten/hilbert/Ranges2.java
+++ b/src/main/java/org/davidmoten/hilbert/Ranges2.java
@@ -36 +36 @@ public class Ranges2 implements Iterable<Range> {
-            // add old head to set (now that the distanceToPrevious has been calculated) 
+            // add old head to set
@@ -47 +46,0 @@ public class Ranges2 implements Iterable<Range> {
-                // also replace its predecessor 
@@ -57,6 +56 @@ public class Ranges2 implements Iterable<Range> {
-                Node firstPrevious = first.previous();
-                if (firstPrevious == ranges) {
-                    ranges = n;
-                } else {
-                    first.previous().previous().setNext(n);
-                }
+                first.previous().setNext(n);
@@ -95,4 +88,0 @@ public class Ranges2 implements Iterable<Range> {
-    public void println() {
-        forEach(System.out::println);
-    }
-
diff --git a/src/test/java/org/davidmoten/hilbert/Ranges2Test.java b/src/test/java/org/davidmoten/hilbert/Ranges2Test.java
index b2c1cab..7223a12 100644
--- a/src/test/java/org/davidmoten/hilbert/Ranges2Test.java
+++ b/src/test/java/org/davidmoten/hilbert/Ranges2Test.java
@@ -3,5 +2,0 @@ package org.davidmoten.hilbert;
-import static org.junit.Assert.assertEquals;
-
-import java.util.ArrayList;
-import java.util.List;
-
@@ -10,2 +4,0 @@ import org.junit.Test;
-import com.github.davidmoten.guavamini.Lists;
-
@@ -15,6 +8 @@ public class Ranges2Test {
-    public void testMaxSizeNotExceededWhenMaxIs2() {
-        Ranges2 r = new Ranges2(2);
-        r.add(Range.create(1));
-        r.add(Range.create(10));
-        checkIs(r, 10, 10, 1, 1);
-    }
+    public void testRemovesCorrectRange() {
@@ -22,2 +9,0 @@ public class Ranges2Test {
-    @Test
-    public void testMaxSizeExceededWhenMaxIs2() {
@@ -26,0 +13 @@ public class Ranges2Test {
+        r.add(Range.create(11));
@@ -28,2 +14,0 @@ public class Ranges2Test {
-        checkIs(r, 10, 12, 1, 1);
-    }
@@ -31,15 +16 @@ public class Ranges2Test {
-    @Test
-    public void testMaxSizeExceededWhenMaxIs3() {
-        Ranges2 r = new Ranges2(3);
-        r.add(Range.create(1));
-        r.add(Range.create(10));
-        r.add(Range.create(12));
-        r.add(Range.create(18));
-        r.println();
-        checkIs(r, 18, 18, 10, 12, 1, 1);
-    }
-
-    @Test(expected = IllegalArgumentException.class)
-    public void testBufferSizeOneThrows() {
-        new Ranges2(1);
-    }
+        r.forEach(System.out::println);
@@ -47,5 +17,0 @@ public class Ranges2Test {
-    @Test(expected = IllegalArgumentException.class)
-    public void testRangeDecreasingThrows() {
-        Ranges2 r = new Ranges2(3);
-        r.add(Range.create(5, 6));
-        r.add(Range.create(1, 2));
@@ -54,7 +19,0 @@ public class Ranges2Test {
-    private void checkIs(Ranges2 r, int... ords) {
-        List<Range> list = new ArrayList<>();
-        for (int i = 0; i < ords.length; i += 2) {
-            list.add(Range.create(ords[i], ords[i + 1]));
-        }
-        assertEquals(list, Lists.newArrayList(r));
-    }
