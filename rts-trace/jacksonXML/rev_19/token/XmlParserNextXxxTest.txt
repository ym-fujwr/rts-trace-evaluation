package
com
.
fasterxml
.
jackson
.
dataformat
.
xml
.
stream
;
import
java
.
io
.
*
;
import
com
.
fasterxml
.
jackson
.
core
.
*
;
import
com
.
fasterxml
.
jackson
.
dataformat
.
xml
.
XmlFactory
;
import
com
.
fasterxml
.
jackson
.
dataformat
.
xml
.
XmlTestBase
;
import
com
.
fasterxml
.
jackson
.
dataformat
.
xml
.
deser
.
FromXmlParser
;
public
class
XmlParserNextXxxTest
extends
XmlTestBase
{
protected
JsonFactory
_jsonFactory
;
protected
XmlFactory
_xmlFactory
;
@
Override
public
void
setUp
(
)
throws
Exception
{
super
.
setUp
(
)
;
_xmlFactory
=
new
XmlFactory
(
)
;
}
public
void
testXmlAttributesWithNextTextValue
(
)
throws
Exception
{
final
String
XML
=
"<data max=\"7\" offset=\"9\"/>"
;
FromXmlParser
xp
=
(
FromXmlParser
)
_xmlFactory
.
createParser
(
new
StringReader
(
XML
)
)
;
assertToken
(
JsonToken
.
START_OBJECT
,
xp
.
nextToken
(
)
)
;
assertToken
(
JsonToken
.
FIELD_NAME
,
xp
.
nextToken
(
)
)
;
assertEquals
(
"max"
,
xp
.
getCurrentName
(
)
)
;
assertEquals
(
"7"
,
xp
.
nextTextValue
(
)
)
;
assertToken
(
JsonToken
.
FIELD_NAME
,
xp
.
nextToken
(
)
)
;
assertEquals
(
"offset"
,
xp
.
getCurrentName
(
)
)
;
assertEquals
(
"offset"
,
xp
.
getText
(
)
)
;
assertEquals
(
"9"
,
xp
.
nextTextValue
(
)
)
;
assertEquals
(
"9"
,
xp
.
getText
(
)
)
;
assertToken
(
JsonToken
.
END_OBJECT
,
xp
.
nextToken
(
)
)
;
xp
.
close
(
)
;
}
}
<EOF>
