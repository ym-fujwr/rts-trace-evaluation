package
com
.
fasterxml
.
jackson
.
dataformat
.
xml
.
jaxb
;
import
java
.
io
.
IOException
;
import
jakarta
.
xml
.
bind
.
annotation
.
*
;
import
com
.
fasterxml
.
jackson
.
databind
.
AnnotationIntrospector
;
import
com
.
fasterxml
.
jackson
.
databind
.
introspect
.
JacksonAnnotationIntrospector
;
import
com
.
fasterxml
.
jackson
.
annotation
.
JsonPropertyOrder
;
import
com
.
fasterxml
.
jackson
.
dataformat
.
xml
.
XmlAnnotationIntrospector
;
import
com
.
fasterxml
.
jackson
.
dataformat
.
xml
.
XmlMapper
;
import
com
.
fasterxml
.
jackson
.
dataformat
.
xml
.
XmlTestBase
;
public
class
WithJAXBAnnotationsTest
extends
XmlTestBase
{
@
XmlRootElement
(
name
=
"bean"
)
public
static
class
RootBean
{
public
String
value
=
"text"
;
}
public
static
class
AttrBean
{
@
XmlAttribute
public
String
attr
=
"3"
;
}
@
jakarta
.
xml
.
bind
.
annotation
.
XmlRootElement
(
name
=
"Simple"
)
static
class
WithXmlValue
{
@
jakarta
.
xml
.
bind
.
annotation
.
XmlAttribute
public
int
a
=
13
;
@
jakarta
.
xml
.
bind
.
annotation
.
XmlValue
public
String
text
=
"something"
;
}
@
XmlRootElement
(
name
=
"Individual"
)
@
JsonPropertyOrder
(
{
"id"
,
"firstName"
,
"lastName"
}
)
static
class
MyPerson
{
@
XmlAttribute
(
name
=
"identifier"
)
public
Long
id
;
@
XmlElement
(
name
=
"givenName"
)
public
String
firstName
;
@
XmlElement
(
name
=
"surName"
)
public
String
lastName
;
public
Long
getId
(
)
{
return
id
;
}
public
void
setId
(
final
Long
id
)
{
this
.
id
=
id
;
}
public
String
getFirstName
(
)
{
return
firstName
;
}
public
void
setFirstName
(
final
String
firstName
)
{
this
.
firstName
=
firstName
;
}
public
String
getLastName
(
)
{
return
lastName
;
}
public
void
setLastName
(
final
String
lastName
)
{
this
.
lastName
=
lastName
;
}
}
protected
XmlMapper
_jaxbMapper
;
protected
XmlMapper
_nonJaxbMapper
;
@
Override
public
void
setUp
(
)
throws
Exception
{
super
.
setUp
(
)
;
_jaxbMapper
=
new
XmlMapper
(
)
;
_nonJaxbMapper
=
new
XmlMapper
(
)
;
AnnotationIntrospector
intr
=
XmlAnnotationIntrospector
.
Pair
.
instance
(
jakartaXMLBindAnnotationIntrospector
(
)
,
new
JacksonAnnotationIntrospector
(
)
)
;
_jaxbMapper
.
setAnnotationIntrospector
(
intr
)
;
}
public
void
testRootName
(
)
throws
Exception
{
RootBean
bean
=
new
RootBean
(
)
;
assertEquals
(
"<RootBean><value>text</value></RootBean>"
,
_nonJaxbMapper
.
writeValueAsString
(
bean
)
)
;
assertEquals
(
"<bean><value>text</value></bean>"
,
_jaxbMapper
.
writeValueAsString
(
bean
)
)
;
}
public
void
testSerializeAsAttr
(
)
throws
Exception
{
AttrBean
bean
=
new
AttrBean
(
)
;
assertEquals
(
"<AttrBean><attr>3</attr></AttrBean>"
,
_nonJaxbMapper
.
writeValueAsString
(
bean
)
)
;
assertEquals
(
"<AttrBean attr=\"3\"/>"
,
_jaxbMapper
.
writeValueAsString
(
bean
)
)
;
}
public
void
testAsTextWithJAXB
(
)
throws
IOException
{
String
xml
=
_jaxbMapper
.
writeValueAsString
(
new
WithXmlValue
(
)
)
;
assertEquals
(
"<Simple a=\"13\">something</Simple>"
,
xml
)
;
WithXmlValue
result
=
_jaxbMapper
.
readValue
(
"<Simple a='99'>else</Simple>"
,
WithXmlValue
.
class
)
;
assertEquals
(
99
,
result
.
a
)
;
assertEquals
(
"else"
,
result
.
text
)
;
}
public
void
testPersonAsXml
(
)
throws
Exception
{
MyPerson
person
=
new
MyPerson
(
)
;
person
.
id
=
Long
.
valueOf
(
1L
)
;
person
.
firstName
=
"Jay"
;
person
.
lastName
=
"Unit"
;
String
json
=
_jaxbMapper
.
writeValueAsString
(
person
)
;
String
expected
=
"<Individual identifier=\"1\"><givenName>Jay</givenName>"
+
"<surName>Unit</surName></Individual>"
;
assertEquals
(
expected
,
json
)
;
}
}
<EOF>
