package
com
.
fasterxml
.
jackson
.
dataformat
.
xml
.
ser
;
import
java
.
io
.
IOException
;
import
com
.
fasterxml
.
jackson
.
dataformat
.
xml
.
XmlMapper
;
import
com
.
fasterxml
.
jackson
.
dataformat
.
xml
.
XmlTestBase
;
public
class
XsiNilSerializationTest
extends
XmlTestBase
{
static
class
WrapperBean
<
T
>
{
public
T
value
;
public
WrapperBean
(
)
{
}
public
WrapperBean
(
T
v
)
{
value
=
v
;
}
}
private
final
XmlMapper
MAPPER
=
XmlMapper
.
builder
(
)
.
configure
(
ToXmlGenerator
.
Feature
.
WRITE_NULLS_AS_XSI_NIL
,
true
)
.
build
(
)
;
public
void
testNilPropertyNoIndent
(
)
throws
IOException
{
assertEquals
(
"<WrapperBean><value xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:nil=\"true\"/></WrapperBean>"
,
MAPPER
.
writeValueAsString
(
new
WrapperBean
<
>
(
null
)
)
)
;
}
public
void
testNilPropertyRoot
(
)
throws
IOException
{
assertEquals
(
"<null xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:nil=\"true\"/>"
,
MAPPER
.
writeValueAsString
(
null
)
)
;
}
public
void
testNilPropertyWithIndent
(
)
throws
IOException
{
final
String
xml
=
MAPPER
.
writerWithDefaultPrettyPrinter
(
)
.
writeValueAsString
(
new
WrapperBean
<
>
(
null
)
)
.
trim
(
)
;
assertEquals
(
"<WrapperBean>\n"
+
"  <value xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:nil=\"true\"/>\n"
+
"</WrapperBean>"
,
xml
)
;
}
}
<EOF>
