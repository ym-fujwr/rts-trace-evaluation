package
com
.
zaxxer
.
nuprocess
.
codec
;
import
com
.
zaxxer
.
nuprocess
.
NuProcess
;
import
com
.
zaxxer
.
nuprocess
.
NuProcessHandler
;
import
java
.
nio
.
ByteBuffer
;
import
java
.
nio
.
CharBuffer
;
import
java
.
nio
.
charset
.
Charset
;
import
java
.
nio
.
charset
.
CharsetDecoder
;
import
java
.
nio
.
charset
.
CharsetEncoder
;
import
java
.
nio
.
charset
.
CoderResult
;
public
abstract
class
NuAbstractCharsetHandler
implements
NuProcessHandler
{
private
final
NuCharsetEncoder
stdinEncoder
;
private
final
NuCharsetDecoder
stdoutDecoder
;
private
final
NuCharsetDecoder
stderrDecoder
;
private
class
StdinEncoderHandler
implements
NuCharsetEncoderHandler
{
@
Override
public
boolean
onStdinReady
(
CharBuffer
buffer
)
{
return
onStdinCharsReady
(
buffer
)
;
}
@
Override
public
void
onEncoderError
(
CoderResult
result
)
{
onStdinEncoderError
(
result
)
;
}
}
private
class
StdoutDecoderHandler
implements
NuCharsetDecoderHandler
{
@
Override
public
void
onDecode
(
CharBuffer
buffer
,
boolean
closed
,
CoderResult
decoderResult
)
{
onStdoutChars
(
buffer
,
closed
,
decoderResult
)
;
}
}
private
class
StderrDecoderHandler
implements
NuCharsetDecoderHandler
{
@
Override
public
void
onDecode
(
CharBuffer
buffer
,
boolean
closed
,
CoderResult
decoderResult
)
{
onStderrChars
(
buffer
,
closed
,
decoderResult
)
;
}
}
protected
NuAbstractCharsetHandler
(
Charset
charset
)
{
this
(
charset
.
newEncoder
(
)
,
charset
.
newDecoder
(
)
,
charset
.
newDecoder
(
)
)
;
}
protected
NuAbstractCharsetHandler
(
CharsetEncoder
stdinEncoder
,
CharsetDecoder
stdoutDecoder
,
CharsetDecoder
stderrDecoder
)
{
this
.
stdinEncoder
=
new
NuCharsetEncoder
(
new
StdinEncoderHandler
(
)
,
stdinEncoder
)
;
this
.
stdoutDecoder
=
new
NuCharsetDecoder
(
new
StdoutDecoderHandler
(
)
,
stdoutDecoder
)
;
this
.
stderrDecoder
=
new
NuCharsetDecoder
(
new
StderrDecoderHandler
(
)
,
stderrDecoder
)
;
}
protected
boolean
onStdinCharsReady
(
CharBuffer
buffer
)
{
return
false
;
}
protected
void
onStdinEncoderError
(
CoderResult
result
)
{
}
protected
void
onStdoutChars
(
CharBuffer
buffer
,
boolean
closed
,
CoderResult
coderResult
)
{
buffer
.
position
(
buffer
.
limit
(
)
)
;
}
protected
void
onStderrChars
(
CharBuffer
buffer
,
boolean
closed
,
CoderResult
coderResult
)
{
buffer
.
position
(
buffer
.
limit
(
)
)
;
}
@
Override
public
void
onPreStart
(
NuProcess
nuProcess
)
{
}
@
Override
public
void
onStart
(
NuProcess
nuProcess
)
{
}
@
Override
public
void
onExit
(
int
exitCode
)
{
}
@
Override
public
final
void
onStdout
(
ByteBuffer
buffer
,
boolean
closed
)
{
stdoutDecoder
.
onOutput
(
buffer
,
closed
)
;
}
@
Override
public
final
void
onStderr
(
ByteBuffer
buffer
,
boolean
closed
)
{
stderrDecoder
.
onOutput
(
buffer
,
closed
)
;
}
@
Override
public
final
boolean
onStdinReady
(
ByteBuffer
buffer
)
{
return
stdinEncoder
.
onStdinReady
(
buffer
)
;
}
}
<EOF>
