package
org
.
apache
.
commons
.
cli
;
import
static
org
.
junit
.
Assert
.
assertFalse
;
import
static
org
.
junit
.
Assert
.
assertTrue
;
import
org
.
junit
.
Test
;
public
class
DisablePartialMatchingTest
{
@
Test
public
void
testDisablePartialMatching
(
)
throws
Exception
{
final
CommandLineParser
parser
=
new
DefaultParser
(
false
)
;
final
Options
options
=
new
Options
(
)
;
options
.
addOption
(
new
Option
(
"d"
,
"debug"
,
false
,
"Turn on debug."
)
)
;
options
.
addOption
(
new
Option
(
"e"
,
"extract"
,
false
,
"Turn on extract."
)
)
;
options
.
addOption
(
new
Option
(
"o"
,
"option"
,
true
,
"Turn on option with argument."
)
)
;
final
CommandLine
line
=
parser
.
parse
(
options
,
new
String
[
]
{
"-de"
,
"--option=foobar"
}
)
;
assertTrue
(
"There should be an option debug in any case..."
,
line
.
hasOption
(
"debug"
)
)
;
assertTrue
(
"There should be an extract option because partial matching is off"
,
line
.
hasOption
(
"extract"
)
)
;
assertTrue
(
"There should be an option option with a argument value"
,
line
.
hasOption
(
"option"
)
)
;
}
@
Test
public
void
testRegularPartialMatching
(
)
throws
Exception
{
final
CommandLineParser
parser
=
new
DefaultParser
(
)
;
final
Options
options
=
new
Options
(
)
;
options
.
addOption
(
new
Option
(
"d"
,
"debug"
,
false
,
"Turn on debug."
)
)
;
options
.
addOption
(
new
Option
(
"e"
,
"extract"
,
false
,
"Turn on extract."
)
)
;
options
.
addOption
(
new
Option
(
"o"
,
"option"
,
true
,
"Turn on option with argument."
)
)
;
final
CommandLine
line
=
parser
.
parse
(
options
,
new
String
[
]
{
"-de"
,
"--option=foobar"
}
)
;
assertTrue
(
"There should be an option debug in any case..."
,
line
.
hasOption
(
"debug"
)
)
;
assertFalse
(
"There should not be an extract option because partial matching only selects debug"
,
line
.
hasOption
(
"extract"
)
)
;
assertTrue
(
"There should be an option option with a argument value"
,
line
.
hasOption
(
"option"
)
)
;
}
}
<EOF>
