package
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
jdom
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
QName
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
NodePointer
;
public
class
JDOMNamespacePointer
extends
NodePointer
{
private
String
prefix
;
private
String
namespaceURI
;
private
static
final
long
serialVersionUID
=
7935311686545862379L
;
public
JDOMNamespacePointer
(
NodePointer
parent
,
String
prefix
)
{
super
(
parent
)
;
this
.
prefix
=
prefix
;
}
public
JDOMNamespacePointer
(
NodePointer
parent
,
String
prefix
,
String
namespaceURI
)
{
super
(
parent
)
;
this
.
prefix
=
prefix
;
this
.
namespaceURI
=
namespaceURI
;
}
public
QName
getName
(
)
{
return
new
QName
(
prefix
)
;
}
public
Object
getBaseValue
(
)
{
return
null
;
}
public
boolean
isCollection
(
)
{
return
false
;
}
public
int
getLength
(
)
{
return
1
;
}
public
Object
getImmediateNode
(
)
{
return
getNamespaceURI
(
)
;
}
public
String
getNamespaceURI
(
)
{
if
(
namespaceURI
==
null
)
{
namespaceURI
=
parent
.
getNamespaceURI
(
prefix
)
;
}
return
namespaceURI
;
}
public
boolean
isLeaf
(
)
{
return
true
;
}
public
void
setValue
(
Object
value
)
{
throw
new
UnsupportedOperationException
(
"Cannot modify a namespace"
)
;
}
public
String
asPath
(
)
{
StringBuffer
buffer
=
new
StringBuffer
(
)
;
if
(
parent
!=
null
)
{
buffer
.
append
(
parent
.
asPath
(
)
)
;
if
(
buffer
.
length
(
)
==
0
||
buffer
.
charAt
(
buffer
.
length
(
)
-
1
)
!=
'/'
)
{
buffer
.
append
(
'/'
)
;
}
}
buffer
.
append
(
"namespace::"
)
;
buffer
.
append
(
prefix
)
;
return
buffer
.
toString
(
)
;
}
public
int
hashCode
(
)
{
return
prefix
.
hashCode
(
)
;
}
public
boolean
equals
(
Object
object
)
{
return
object
==
this
||
object
instanceof
JDOMNamespacePointer
&&
prefix
.
equals
(
(
(
JDOMNamespacePointer
)
object
)
.
prefix
)
;
}
public
int
compareChildNodePointers
(
NodePointer
pointer1
,
NodePointer
pointer2
)
{
return
0
;
}
}
<EOF>
