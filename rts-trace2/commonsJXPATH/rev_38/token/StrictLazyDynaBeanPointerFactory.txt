package
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
dynabeans
;
import
java
.
util
.
Locale
;
import
org
.
apache
.
commons
.
beanutils
.
LazyDynaBean
;
import
org
.
apache
.
commons
.
beanutils
.
LazyDynaClass
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
QName
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
NodePointer
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
NodePointerFactory
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
beans
.
PropertyPointer
;
public
class
StrictLazyDynaBeanPointerFactory
implements
NodePointerFactory
{
private
static
class
StrictLazyDynaBeanPointer
extends
DynaBeanPointer
{
private
static
final
long
serialVersionUID
=
1L
;
private
final
LazyDynaBean
lazyDynaBean
;
public
StrictLazyDynaBeanPointer
(
final
NodePointer
parent
,
final
QName
name
,
final
LazyDynaBean
lazyDynaBean
)
{
super
(
parent
,
name
,
lazyDynaBean
)
;
this
.
lazyDynaBean
=
lazyDynaBean
;
}
public
StrictLazyDynaBeanPointer
(
final
QName
name
,
final
LazyDynaBean
lazyDynaBean
,
final
Locale
locale
)
{
super
(
name
,
lazyDynaBean
,
locale
)
;
this
.
lazyDynaBean
=
lazyDynaBean
;
}
@
Override
public
PropertyPointer
getPropertyPointer
(
)
{
return
new
DynaBeanPropertyPointer
(
this
,
lazyDynaBean
)
{
private
static
final
long
serialVersionUID
=
1L
;
@
Override
protected
boolean
isActualProperty
(
)
{
return
(
(
LazyDynaClass
)
lazyDynaBean
.
getDynaClass
(
)
)
.
isDynaProperty
(
getPropertyName
(
)
)
;
}
}
;
}
}
@
Override
public
int
getOrder
(
)
{
return
DynaBeanPointerFactory
.
DYNA_BEAN_POINTER_FACTORY_ORDER
-
1
;
}
@
Override
public
NodePointer
createNodePointer
(
final
QName
name
,
final
Object
object
,
final
Locale
locale
)
{
return
object
instanceof
LazyDynaBean
?
new
StrictLazyDynaBeanPointer
(
name
,
(
LazyDynaBean
)
object
,
locale
)
:
null
;
}
@
Override
public
NodePointer
createNodePointer
(
final
NodePointer
parent
,
final
QName
name
,
final
Object
object
)
{
return
object
instanceof
LazyDynaBean
?
new
StrictLazyDynaBeanPointer
(
parent
,
name
,
(
LazyDynaBean
)
object
)
:
null
;
}
}
<EOF>
