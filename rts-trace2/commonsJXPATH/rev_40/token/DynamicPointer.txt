package
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
dynamic
;
import
java
.
util
.
Locale
;
import
org
.
apache
.
commons
.
jxpath
.
DynamicPropertyHandler
;
import
org
.
apache
.
commons
.
jxpath
.
JXPathIntrospector
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
QName
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
NodeIterator
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
NodePointer
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
beans
.
PropertyIterator
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
beans
.
PropertyOwnerPointer
;
import
org
.
apache
.
commons
.
jxpath
.
ri
.
model
.
beans
.
PropertyPointer
;
public
class
DynamicPointer
extends
PropertyOwnerPointer
{
private
final
QName
name
;
private
final
Object
bean
;
private
final
DynamicPropertyHandler
handler
;
private
static
final
long
serialVersionUID
=
-
1842347025295904256L
;
public
DynamicPointer
(
final
QName
name
,
final
Object
bean
,
final
DynamicPropertyHandler
handler
,
final
Locale
locale
)
{
super
(
null
,
locale
)
;
this
.
name
=
name
;
this
.
bean
=
bean
;
this
.
handler
=
handler
;
}
public
DynamicPointer
(
final
NodePointer
parent
,
final
QName
name
,
final
Object
bean
,
final
DynamicPropertyHandler
handler
)
{
super
(
parent
)
;
this
.
name
=
name
;
this
.
bean
=
bean
;
this
.
handler
=
handler
;
}
@
Override
public
PropertyPointer
getPropertyPointer
(
)
{
return
new
DynamicPropertyPointer
(
this
,
handler
)
;
}
@
Override
public
NodeIterator
createNodeIterator
(
final
String
property
,
final
boolean
reverse
,
final
NodePointer
startWith
)
{
return
new
PropertyIterator
(
this
,
property
,
reverse
,
startWith
)
;
}
@
Override
public
NodeIterator
attributeIterator
(
final
QName
name
)
{
return
new
DynamicAttributeIterator
(
this
,
name
)
;
}
@
Override
public
QName
getName
(
)
{
return
name
;
}
@
Override
public
boolean
isDynamicPropertyDeclarationSupported
(
)
{
return
true
;
}
@
Override
public
Object
getBaseValue
(
)
{
return
bean
;
}
@
Override
public
boolean
isLeaf
(
)
{
final
Object
value
=
getNode
(
)
;
return
value
==
null
||
JXPathIntrospector
.
getBeanInfo
(
value
.
getClass
(
)
)
.
isAtomic
(
)
;
}
@
Override
public
boolean
isCollection
(
)
{
return
false
;
}
@
Override
public
int
getLength
(
)
{
return
1
;
}
@
Override
public
String
asPath
(
)
{
return
parent
==
null
?
"/"
:
super
.
asPath
(
)
;
}
@
Override
public
int
hashCode
(
)
{
return
System
.
identityHashCode
(
bean
)
+
(
name
==
null
?
0
:
name
.
hashCode
(
)
)
;
}
@
Override
public
boolean
equals
(
final
Object
object
)
{
if
(
object
==
this
)
{
return
true
;
}
if
(
!
(
object
instanceof
DynamicPointer
)
)
{
return
false
;
}
final
DynamicPointer
other
=
(
DynamicPointer
)
object
;
if
(
bean
!=
other
.
bean
)
{
return
false
;
}
return
name
==
other
.
name
||
name
!=
null
&&
name
.
equals
(
other
.
name
)
;
}
}
<EOF>
