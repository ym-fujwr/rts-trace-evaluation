package
org
.
apache
.
commons
.
net
.
ftp
;
import
java
.
io
.
IOException
;
import
java
.
net
.
InetAddress
;
import
java
.
net
.
ServerSocket
;
import
javax
.
net
.
ServerSocketFactory
;
import
javax
.
net
.
ssl
.
SSLContext
;
import
javax
.
net
.
ssl
.
SSLServerSocket
;
import
javax
.
net
.
ssl
.
SSLServerSocketFactory
;
public
class
FTPSServerSocketFactory
extends
ServerSocketFactory
{
private
final
SSLContext
sslContext
;
public
FTPSServerSocketFactory
(
final
SSLContext
sslContext
)
{
this
.
sslContext
=
sslContext
;
}
@
SuppressWarnings
(
"resource"
)
@
Override
public
ServerSocket
createServerSocket
(
)
throws
IOException
{
return
init
(
getServerSocketFactory
(
)
.
createServerSocket
(
)
)
;
}
@
SuppressWarnings
(
"resource"
)
@
Override
public
ServerSocket
createServerSocket
(
final
int
port
)
throws
IOException
{
return
init
(
getServerSocketFactory
(
)
.
createServerSocket
(
port
)
)
;
}
@
SuppressWarnings
(
"resource"
)
@
Override
public
ServerSocket
createServerSocket
(
final
int
port
,
final
int
backlog
)
throws
IOException
{
return
init
(
getServerSocketFactory
(
)
.
createServerSocket
(
port
,
backlog
)
)
;
}
@
SuppressWarnings
(
"resource"
)
@
Override
public
ServerSocket
createServerSocket
(
final
int
port
,
final
int
backlog
,
final
InetAddress
ifAddress
)
throws
IOException
{
return
init
(
getServerSocketFactory
(
)
.
createServerSocket
(
port
,
backlog
,
ifAddress
)
)
;
}
private
SSLServerSocketFactory
getServerSocketFactory
(
)
{
return
this
.
sslContext
.
getServerSocketFactory
(
)
;
}
public
ServerSocket
init
(
final
ServerSocket
socket
)
{
(
(
SSLServerSocket
)
socket
)
.
setUseClientMode
(
true
)
;
return
socket
;
}
}
<EOF>
