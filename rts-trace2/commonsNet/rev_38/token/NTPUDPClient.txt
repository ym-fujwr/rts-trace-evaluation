package
org
.
apache
.
commons
.
net
.
ntp
;
import
java
.
io
.
IOException
;
import
java
.
net
.
DatagramPacket
;
import
java
.
net
.
InetAddress
;
import
org
.
apache
.
commons
.
net
.
DatagramSocketClient
;
public
final
class
NTPUDPClient
extends
DatagramSocketClient
{
public
static
final
int
DEFAULT_PORT
=
123
;
private
int
version
=
NtpV3Packet
.
VERSION_3
;
public
TimeInfo
getTime
(
final
InetAddress
host
)
throws
IOException
{
return
getTime
(
host
,
NtpV3Packet
.
NTP_PORT
)
;
}
public
TimeInfo
getTime
(
final
InetAddress
host
,
final
int
port
)
throws
IOException
{
if
(
!
isOpen
(
)
)
{
open
(
)
;
}
final
NtpV3Packet
message
=
new
NtpV3Impl
(
)
;
message
.
setMode
(
NtpV3Packet
.
MODE_CLIENT
)
;
message
.
setVersion
(
version
)
;
final
DatagramPacket
sendPacket
=
message
.
getDatagramPacket
(
)
;
sendPacket
.
setAddress
(
host
)
;
sendPacket
.
setPort
(
port
)
;
final
NtpV3Packet
recMessage
=
new
NtpV3Impl
(
)
;
final
DatagramPacket
receivePacket
=
recMessage
.
getDatagramPacket
(
)
;
final
TimeStamp
now
=
TimeStamp
.
getCurrentTime
(
)
;
message
.
setTransmitTime
(
now
)
;
_socket_
.
send
(
sendPacket
)
;
_socket_
.
receive
(
receivePacket
)
;
final
long
returnTimeMillis
=
System
.
currentTimeMillis
(
)
;
if
(
!
now
.
equals
(
recMessage
.
getOriginateTimeStamp
(
)
)
)
{
throw
new
IOException
(
"Originate time does not match the request"
)
;
}
return
new
TimeInfo
(
recMessage
,
returnTimeMillis
,
false
)
;
}
public
int
getVersion
(
)
{
return
version
;
}
public
void
setVersion
(
final
int
version
)
{
this
.
version
=
version
;
}
}
<EOF>
