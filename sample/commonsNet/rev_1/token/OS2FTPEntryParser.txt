package
org
.
apache
.
commons
.
net
.
ftp
.
parser
;
import
java
.
text
.
ParseException
;
import
org
.
apache
.
commons
.
net
.
ftp
.
FTPClientConfig
;
import
org
.
apache
.
commons
.
net
.
ftp
.
FTPFile
;
public
class
OS2FTPEntryParser
extends
ConfigurableFTPFileEntryParserImpl
{
private
static
final
String
DEFAULT_DATE_FORMAT
=
"MM-dd-yy HH:mm"
;
private
static
final
String
REGEX
=
"\\s*([0-9]+)\\s*"
+
"(\\s+|[A-Z]+)\\s*"
+
"(DIR|\\s+)\\s*"
+
"(\\S+)\\s+(\\S+)\\s+"
+
"(\\S.*)"
;
public
OS2FTPEntryParser
(
)
{
this
(
null
)
;
}
public
OS2FTPEntryParser
(
final
FTPClientConfig
config
)
{
super
(
REGEX
)
;
configure
(
config
)
;
}
@
Override
protected
FTPClientConfig
getDefaultConfiguration
(
)
{
return
new
FTPClientConfig
(
FTPClientConfig
.
SYST_OS2
,
DEFAULT_DATE_FORMAT
,
null
)
;
}
@
Override
public
FTPFile
parseFTPEntry
(
final
String
entry
)
{
final
FTPFile
f
=
new
FTPFile
(
)
;
if
(
matches
(
entry
)
)
{
final
String
size
=
group
(
1
)
;
final
String
attrib
=
group
(
2
)
;
final
String
dirString
=
group
(
3
)
;
final
String
datestr
=
group
(
4
)
+
" "
+
group
(
5
)
;
final
String
name
=
group
(
6
)
;
try
{
f
.
setTimestamp
(
super
.
parseTimestamp
(
datestr
)
)
;
}
catch
(
final
ParseException
e
)
{
}
if
(
dirString
.
trim
(
)
.
equals
(
"DIR"
)
||
attrib
.
trim
(
)
.
equals
(
"DIR"
)
)
{
f
.
setType
(
FTPFile
.
DIRECTORY_TYPE
)
;
}
else
{
f
.
setType
(
FTPFile
.
FILE_TYPE
)
;
}
f
.
setName
(
name
.
trim
(
)
)
;
f
.
setSize
(
Long
.
parseLong
(
size
.
trim
(
)
)
)
;
return
f
;
}
return
null
;
}
}
<EOF>
